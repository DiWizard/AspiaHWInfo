// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: aspia.desktop.proto

package info.malenkov.aspiahwinfo.proto;

/**
 * Protobuf type {@code info.malenkov.aspiahwinfo.proto.VideoPacket}
 */
public final class VideoPacket extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:info.malenkov.aspiahwinfo.proto.VideoPacket)
    VideoPacketOrBuilder {
private static final long serialVersionUID = 0L;
  // Use VideoPacket.newBuilder() to construct.
  private VideoPacket(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private VideoPacket() {
    encoding_ = 0;
    dirtyRect_ = java.util.Collections.emptyList();
    data_ = com.google.protobuf.ByteString.EMPTY;
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new VideoPacket();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private VideoPacket(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 8: {
            int rawValue = input.readEnum();

            encoding_ = rawValue;
            break;
          }
          case 18: {
            info.malenkov.aspiahwinfo.proto.VideoPacketFormat.Builder subBuilder = null;
            if (format_ != null) {
              subBuilder = format_.toBuilder();
            }
            format_ = input.readMessage(info.malenkov.aspiahwinfo.proto.VideoPacketFormat.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(format_);
              format_ = subBuilder.buildPartial();
            }

            break;
          }
          case 26: {
            if (!((mutable_bitField0_ & 0x00000001) != 0)) {
              dirtyRect_ = new java.util.ArrayList<info.malenkov.aspiahwinfo.proto.Rect>();
              mutable_bitField0_ |= 0x00000001;
            }
            dirtyRect_.add(
                input.readMessage(info.malenkov.aspiahwinfo.proto.Rect.parser(), extensionRegistry));
            break;
          }
          case 34: {

            data_ = input.readBytes();
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (com.google.protobuf.UninitializedMessageException e) {
      throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000001) != 0)) {
        dirtyRect_ = java.util.Collections.unmodifiableList(dirtyRect_);
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return info.malenkov.aspiahwinfo.proto.AspiaDesktop.internal_static_info_malenkov_aspiahwinfo_proto_VideoPacket_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return info.malenkov.aspiahwinfo.proto.AspiaDesktop.internal_static_info_malenkov_aspiahwinfo_proto_VideoPacket_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            info.malenkov.aspiahwinfo.proto.VideoPacket.class, info.malenkov.aspiahwinfo.proto.VideoPacket.Builder.class);
  }

  public static final int ENCODING_FIELD_NUMBER = 1;
  private int encoding_;
  /**
   * <code>.info.malenkov.aspiahwinfo.proto.VideoEncoding encoding = 1;</code>
   * @return The enum numeric value on the wire for encoding.
   */
  @java.lang.Override public int getEncodingValue() {
    return encoding_;
  }
  /**
   * <code>.info.malenkov.aspiahwinfo.proto.VideoEncoding encoding = 1;</code>
   * @return The encoding.
   */
  @java.lang.Override public info.malenkov.aspiahwinfo.proto.VideoEncoding getEncoding() {
    @SuppressWarnings("deprecation")
    info.malenkov.aspiahwinfo.proto.VideoEncoding result = info.malenkov.aspiahwinfo.proto.VideoEncoding.valueOf(encoding_);
    return result == null ? info.malenkov.aspiahwinfo.proto.VideoEncoding.UNRECOGNIZED : result;
  }

  public static final int FORMAT_FIELD_NUMBER = 2;
  private info.malenkov.aspiahwinfo.proto.VideoPacketFormat format_;
  /**
   * <pre>
   * If the screen size or the pixel format has changed, the field must be filled.
   * </pre>
   *
   * <code>.info.malenkov.aspiahwinfo.proto.VideoPacketFormat format = 2;</code>
   * @return Whether the format field is set.
   */
  @java.lang.Override
  public boolean hasFormat() {
    return format_ != null;
  }
  /**
   * <pre>
   * If the screen size or the pixel format has changed, the field must be filled.
   * </pre>
   *
   * <code>.info.malenkov.aspiahwinfo.proto.VideoPacketFormat format = 2;</code>
   * @return The format.
   */
  @java.lang.Override
  public info.malenkov.aspiahwinfo.proto.VideoPacketFormat getFormat() {
    return format_ == null ? info.malenkov.aspiahwinfo.proto.VideoPacketFormat.getDefaultInstance() : format_;
  }
  /**
   * <pre>
   * If the screen size or the pixel format has changed, the field must be filled.
   * </pre>
   *
   * <code>.info.malenkov.aspiahwinfo.proto.VideoPacketFormat format = 2;</code>
   */
  @java.lang.Override
  public info.malenkov.aspiahwinfo.proto.VideoPacketFormatOrBuilder getFormatOrBuilder() {
    return getFormat();
  }

  public static final int DIRTY_RECT_FIELD_NUMBER = 3;
  private java.util.List<info.malenkov.aspiahwinfo.proto.Rect> dirtyRect_;
  /**
   * <pre>
   * The list of changed rectangles (areas) of the screen.
   * </pre>
   *
   * <code>repeated .info.malenkov.aspiahwinfo.proto.Rect dirty_rect = 3;</code>
   */
  @java.lang.Override
  public java.util.List<info.malenkov.aspiahwinfo.proto.Rect> getDirtyRectList() {
    return dirtyRect_;
  }
  /**
   * <pre>
   * The list of changed rectangles (areas) of the screen.
   * </pre>
   *
   * <code>repeated .info.malenkov.aspiahwinfo.proto.Rect dirty_rect = 3;</code>
   */
  @java.lang.Override
  public java.util.List<? extends info.malenkov.aspiahwinfo.proto.RectOrBuilder> 
      getDirtyRectOrBuilderList() {
    return dirtyRect_;
  }
  /**
   * <pre>
   * The list of changed rectangles (areas) of the screen.
   * </pre>
   *
   * <code>repeated .info.malenkov.aspiahwinfo.proto.Rect dirty_rect = 3;</code>
   */
  @java.lang.Override
  public int getDirtyRectCount() {
    return dirtyRect_.size();
  }
  /**
   * <pre>
   * The list of changed rectangles (areas) of the screen.
   * </pre>
   *
   * <code>repeated .info.malenkov.aspiahwinfo.proto.Rect dirty_rect = 3;</code>
   */
  @java.lang.Override
  public info.malenkov.aspiahwinfo.proto.Rect getDirtyRect(int index) {
    return dirtyRect_.get(index);
  }
  /**
   * <pre>
   * The list of changed rectangles (areas) of the screen.
   * </pre>
   *
   * <code>repeated .info.malenkov.aspiahwinfo.proto.Rect dirty_rect = 3;</code>
   */
  @java.lang.Override
  public info.malenkov.aspiahwinfo.proto.RectOrBuilder getDirtyRectOrBuilder(
      int index) {
    return dirtyRect_.get(index);
  }

  public static final int DATA_FIELD_NUMBER = 4;
  private com.google.protobuf.ByteString data_;
  /**
   * <pre>
   * Video packet data.
   * </pre>
   *
   * <code>bytes data = 4;</code>
   * @return The data.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getData() {
    return data_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (encoding_ != info.malenkov.aspiahwinfo.proto.VideoEncoding.VIDEO_ENCODING_UNKNOWN.getNumber()) {
      output.writeEnum(1, encoding_);
    }
    if (format_ != null) {
      output.writeMessage(2, getFormat());
    }
    for (int i = 0; i < dirtyRect_.size(); i++) {
      output.writeMessage(3, dirtyRect_.get(i));
    }
    if (!data_.isEmpty()) {
      output.writeBytes(4, data_);
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (encoding_ != info.malenkov.aspiahwinfo.proto.VideoEncoding.VIDEO_ENCODING_UNKNOWN.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(1, encoding_);
    }
    if (format_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, getFormat());
    }
    for (int i = 0; i < dirtyRect_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, dirtyRect_.get(i));
    }
    if (!data_.isEmpty()) {
      size += com.google.protobuf.CodedOutputStream
        .computeBytesSize(4, data_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof info.malenkov.aspiahwinfo.proto.VideoPacket)) {
      return super.equals(obj);
    }
    info.malenkov.aspiahwinfo.proto.VideoPacket other = (info.malenkov.aspiahwinfo.proto.VideoPacket) obj;

    if (encoding_ != other.encoding_) return false;
    if (hasFormat() != other.hasFormat()) return false;
    if (hasFormat()) {
      if (!getFormat()
          .equals(other.getFormat())) return false;
    }
    if (!getDirtyRectList()
        .equals(other.getDirtyRectList())) return false;
    if (!getData()
        .equals(other.getData())) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + ENCODING_FIELD_NUMBER;
    hash = (53 * hash) + encoding_;
    if (hasFormat()) {
      hash = (37 * hash) + FORMAT_FIELD_NUMBER;
      hash = (53 * hash) + getFormat().hashCode();
    }
    if (getDirtyRectCount() > 0) {
      hash = (37 * hash) + DIRTY_RECT_FIELD_NUMBER;
      hash = (53 * hash) + getDirtyRectList().hashCode();
    }
    hash = (37 * hash) + DATA_FIELD_NUMBER;
    hash = (53 * hash) + getData().hashCode();
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static info.malenkov.aspiahwinfo.proto.VideoPacket parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static info.malenkov.aspiahwinfo.proto.VideoPacket parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static info.malenkov.aspiahwinfo.proto.VideoPacket parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static info.malenkov.aspiahwinfo.proto.VideoPacket parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static info.malenkov.aspiahwinfo.proto.VideoPacket parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static info.malenkov.aspiahwinfo.proto.VideoPacket parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static info.malenkov.aspiahwinfo.proto.VideoPacket parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static info.malenkov.aspiahwinfo.proto.VideoPacket parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static info.malenkov.aspiahwinfo.proto.VideoPacket parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static info.malenkov.aspiahwinfo.proto.VideoPacket parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static info.malenkov.aspiahwinfo.proto.VideoPacket parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static info.malenkov.aspiahwinfo.proto.VideoPacket parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(info.malenkov.aspiahwinfo.proto.VideoPacket prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code info.malenkov.aspiahwinfo.proto.VideoPacket}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:info.malenkov.aspiahwinfo.proto.VideoPacket)
      info.malenkov.aspiahwinfo.proto.VideoPacketOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return info.malenkov.aspiahwinfo.proto.AspiaDesktop.internal_static_info_malenkov_aspiahwinfo_proto_VideoPacket_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return info.malenkov.aspiahwinfo.proto.AspiaDesktop.internal_static_info_malenkov_aspiahwinfo_proto_VideoPacket_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              info.malenkov.aspiahwinfo.proto.VideoPacket.class, info.malenkov.aspiahwinfo.proto.VideoPacket.Builder.class);
    }

    // Construct using info.malenkov.aspiahwinfo.proto.VideoPacket.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getDirtyRectFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      encoding_ = 0;

      if (formatBuilder_ == null) {
        format_ = null;
      } else {
        format_ = null;
        formatBuilder_ = null;
      }
      if (dirtyRectBuilder_ == null) {
        dirtyRect_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
      } else {
        dirtyRectBuilder_.clear();
      }
      data_ = com.google.protobuf.ByteString.EMPTY;

      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return info.malenkov.aspiahwinfo.proto.AspiaDesktop.internal_static_info_malenkov_aspiahwinfo_proto_VideoPacket_descriptor;
    }

    @java.lang.Override
    public info.malenkov.aspiahwinfo.proto.VideoPacket getDefaultInstanceForType() {
      return info.malenkov.aspiahwinfo.proto.VideoPacket.getDefaultInstance();
    }

    @java.lang.Override
    public info.malenkov.aspiahwinfo.proto.VideoPacket build() {
      info.malenkov.aspiahwinfo.proto.VideoPacket result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public info.malenkov.aspiahwinfo.proto.VideoPacket buildPartial() {
      info.malenkov.aspiahwinfo.proto.VideoPacket result = new info.malenkov.aspiahwinfo.proto.VideoPacket(this);
      int from_bitField0_ = bitField0_;
      result.encoding_ = encoding_;
      if (formatBuilder_ == null) {
        result.format_ = format_;
      } else {
        result.format_ = formatBuilder_.build();
      }
      if (dirtyRectBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0)) {
          dirtyRect_ = java.util.Collections.unmodifiableList(dirtyRect_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.dirtyRect_ = dirtyRect_;
      } else {
        result.dirtyRect_ = dirtyRectBuilder_.build();
      }
      result.data_ = data_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof info.malenkov.aspiahwinfo.proto.VideoPacket) {
        return mergeFrom((info.malenkov.aspiahwinfo.proto.VideoPacket)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(info.malenkov.aspiahwinfo.proto.VideoPacket other) {
      if (other == info.malenkov.aspiahwinfo.proto.VideoPacket.getDefaultInstance()) return this;
      if (other.encoding_ != 0) {
        setEncodingValue(other.getEncodingValue());
      }
      if (other.hasFormat()) {
        mergeFormat(other.getFormat());
      }
      if (dirtyRectBuilder_ == null) {
        if (!other.dirtyRect_.isEmpty()) {
          if (dirtyRect_.isEmpty()) {
            dirtyRect_ = other.dirtyRect_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureDirtyRectIsMutable();
            dirtyRect_.addAll(other.dirtyRect_);
          }
          onChanged();
        }
      } else {
        if (!other.dirtyRect_.isEmpty()) {
          if (dirtyRectBuilder_.isEmpty()) {
            dirtyRectBuilder_.dispose();
            dirtyRectBuilder_ = null;
            dirtyRect_ = other.dirtyRect_;
            bitField0_ = (bitField0_ & ~0x00000001);
            dirtyRectBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getDirtyRectFieldBuilder() : null;
          } else {
            dirtyRectBuilder_.addAllMessages(other.dirtyRect_);
          }
        }
      }
      if (other.getData() != com.google.protobuf.ByteString.EMPTY) {
        setData(other.getData());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      info.malenkov.aspiahwinfo.proto.VideoPacket parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (info.malenkov.aspiahwinfo.proto.VideoPacket) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private int encoding_ = 0;
    /**
     * <code>.info.malenkov.aspiahwinfo.proto.VideoEncoding encoding = 1;</code>
     * @return The enum numeric value on the wire for encoding.
     */
    @java.lang.Override public int getEncodingValue() {
      return encoding_;
    }
    /**
     * <code>.info.malenkov.aspiahwinfo.proto.VideoEncoding encoding = 1;</code>
     * @param value The enum numeric value on the wire for encoding to set.
     * @return This builder for chaining.
     */
    public Builder setEncodingValue(int value) {
      
      encoding_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>.info.malenkov.aspiahwinfo.proto.VideoEncoding encoding = 1;</code>
     * @return The encoding.
     */
    @java.lang.Override
    public info.malenkov.aspiahwinfo.proto.VideoEncoding getEncoding() {
      @SuppressWarnings("deprecation")
      info.malenkov.aspiahwinfo.proto.VideoEncoding result = info.malenkov.aspiahwinfo.proto.VideoEncoding.valueOf(encoding_);
      return result == null ? info.malenkov.aspiahwinfo.proto.VideoEncoding.UNRECOGNIZED : result;
    }
    /**
     * <code>.info.malenkov.aspiahwinfo.proto.VideoEncoding encoding = 1;</code>
     * @param value The encoding to set.
     * @return This builder for chaining.
     */
    public Builder setEncoding(info.malenkov.aspiahwinfo.proto.VideoEncoding value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      encoding_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <code>.info.malenkov.aspiahwinfo.proto.VideoEncoding encoding = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearEncoding() {
      
      encoding_ = 0;
      onChanged();
      return this;
    }

    private info.malenkov.aspiahwinfo.proto.VideoPacketFormat format_;
    private com.google.protobuf.SingleFieldBuilderV3<
        info.malenkov.aspiahwinfo.proto.VideoPacketFormat, info.malenkov.aspiahwinfo.proto.VideoPacketFormat.Builder, info.malenkov.aspiahwinfo.proto.VideoPacketFormatOrBuilder> formatBuilder_;
    /**
     * <pre>
     * If the screen size or the pixel format has changed, the field must be filled.
     * </pre>
     *
     * <code>.info.malenkov.aspiahwinfo.proto.VideoPacketFormat format = 2;</code>
     * @return Whether the format field is set.
     */
    public boolean hasFormat() {
      return formatBuilder_ != null || format_ != null;
    }
    /**
     * <pre>
     * If the screen size or the pixel format has changed, the field must be filled.
     * </pre>
     *
     * <code>.info.malenkov.aspiahwinfo.proto.VideoPacketFormat format = 2;</code>
     * @return The format.
     */
    public info.malenkov.aspiahwinfo.proto.VideoPacketFormat getFormat() {
      if (formatBuilder_ == null) {
        return format_ == null ? info.malenkov.aspiahwinfo.proto.VideoPacketFormat.getDefaultInstance() : format_;
      } else {
        return formatBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * If the screen size or the pixel format has changed, the field must be filled.
     * </pre>
     *
     * <code>.info.malenkov.aspiahwinfo.proto.VideoPacketFormat format = 2;</code>
     */
    public Builder setFormat(info.malenkov.aspiahwinfo.proto.VideoPacketFormat value) {
      if (formatBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        format_ = value;
        onChanged();
      } else {
        formatBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * If the screen size or the pixel format has changed, the field must be filled.
     * </pre>
     *
     * <code>.info.malenkov.aspiahwinfo.proto.VideoPacketFormat format = 2;</code>
     */
    public Builder setFormat(
        info.malenkov.aspiahwinfo.proto.VideoPacketFormat.Builder builderForValue) {
      if (formatBuilder_ == null) {
        format_ = builderForValue.build();
        onChanged();
      } else {
        formatBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * If the screen size or the pixel format has changed, the field must be filled.
     * </pre>
     *
     * <code>.info.malenkov.aspiahwinfo.proto.VideoPacketFormat format = 2;</code>
     */
    public Builder mergeFormat(info.malenkov.aspiahwinfo.proto.VideoPacketFormat value) {
      if (formatBuilder_ == null) {
        if (format_ != null) {
          format_ =
            info.malenkov.aspiahwinfo.proto.VideoPacketFormat.newBuilder(format_).mergeFrom(value).buildPartial();
        } else {
          format_ = value;
        }
        onChanged();
      } else {
        formatBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * If the screen size or the pixel format has changed, the field must be filled.
     * </pre>
     *
     * <code>.info.malenkov.aspiahwinfo.proto.VideoPacketFormat format = 2;</code>
     */
    public Builder clearFormat() {
      if (formatBuilder_ == null) {
        format_ = null;
        onChanged();
      } else {
        format_ = null;
        formatBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * If the screen size or the pixel format has changed, the field must be filled.
     * </pre>
     *
     * <code>.info.malenkov.aspiahwinfo.proto.VideoPacketFormat format = 2;</code>
     */
    public info.malenkov.aspiahwinfo.proto.VideoPacketFormat.Builder getFormatBuilder() {
      
      onChanged();
      return getFormatFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * If the screen size or the pixel format has changed, the field must be filled.
     * </pre>
     *
     * <code>.info.malenkov.aspiahwinfo.proto.VideoPacketFormat format = 2;</code>
     */
    public info.malenkov.aspiahwinfo.proto.VideoPacketFormatOrBuilder getFormatOrBuilder() {
      if (formatBuilder_ != null) {
        return formatBuilder_.getMessageOrBuilder();
      } else {
        return format_ == null ?
            info.malenkov.aspiahwinfo.proto.VideoPacketFormat.getDefaultInstance() : format_;
      }
    }
    /**
     * <pre>
     * If the screen size or the pixel format has changed, the field must be filled.
     * </pre>
     *
     * <code>.info.malenkov.aspiahwinfo.proto.VideoPacketFormat format = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        info.malenkov.aspiahwinfo.proto.VideoPacketFormat, info.malenkov.aspiahwinfo.proto.VideoPacketFormat.Builder, info.malenkov.aspiahwinfo.proto.VideoPacketFormatOrBuilder> 
        getFormatFieldBuilder() {
      if (formatBuilder_ == null) {
        formatBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            info.malenkov.aspiahwinfo.proto.VideoPacketFormat, info.malenkov.aspiahwinfo.proto.VideoPacketFormat.Builder, info.malenkov.aspiahwinfo.proto.VideoPacketFormatOrBuilder>(
                getFormat(),
                getParentForChildren(),
                isClean());
        format_ = null;
      }
      return formatBuilder_;
    }

    private java.util.List<info.malenkov.aspiahwinfo.proto.Rect> dirtyRect_ =
      java.util.Collections.emptyList();
    private void ensureDirtyRectIsMutable() {
      if (!((bitField0_ & 0x00000001) != 0)) {
        dirtyRect_ = new java.util.ArrayList<info.malenkov.aspiahwinfo.proto.Rect>(dirtyRect_);
        bitField0_ |= 0x00000001;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        info.malenkov.aspiahwinfo.proto.Rect, info.malenkov.aspiahwinfo.proto.Rect.Builder, info.malenkov.aspiahwinfo.proto.RectOrBuilder> dirtyRectBuilder_;

    /**
     * <pre>
     * The list of changed rectangles (areas) of the screen.
     * </pre>
     *
     * <code>repeated .info.malenkov.aspiahwinfo.proto.Rect dirty_rect = 3;</code>
     */
    public java.util.List<info.malenkov.aspiahwinfo.proto.Rect> getDirtyRectList() {
      if (dirtyRectBuilder_ == null) {
        return java.util.Collections.unmodifiableList(dirtyRect_);
      } else {
        return dirtyRectBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * The list of changed rectangles (areas) of the screen.
     * </pre>
     *
     * <code>repeated .info.malenkov.aspiahwinfo.proto.Rect dirty_rect = 3;</code>
     */
    public int getDirtyRectCount() {
      if (dirtyRectBuilder_ == null) {
        return dirtyRect_.size();
      } else {
        return dirtyRectBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * The list of changed rectangles (areas) of the screen.
     * </pre>
     *
     * <code>repeated .info.malenkov.aspiahwinfo.proto.Rect dirty_rect = 3;</code>
     */
    public info.malenkov.aspiahwinfo.proto.Rect getDirtyRect(int index) {
      if (dirtyRectBuilder_ == null) {
        return dirtyRect_.get(index);
      } else {
        return dirtyRectBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * The list of changed rectangles (areas) of the screen.
     * </pre>
     *
     * <code>repeated .info.malenkov.aspiahwinfo.proto.Rect dirty_rect = 3;</code>
     */
    public Builder setDirtyRect(
        int index, info.malenkov.aspiahwinfo.proto.Rect value) {
      if (dirtyRectBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureDirtyRectIsMutable();
        dirtyRect_.set(index, value);
        onChanged();
      } else {
        dirtyRectBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * The list of changed rectangles (areas) of the screen.
     * </pre>
     *
     * <code>repeated .info.malenkov.aspiahwinfo.proto.Rect dirty_rect = 3;</code>
     */
    public Builder setDirtyRect(
        int index, info.malenkov.aspiahwinfo.proto.Rect.Builder builderForValue) {
      if (dirtyRectBuilder_ == null) {
        ensureDirtyRectIsMutable();
        dirtyRect_.set(index, builderForValue.build());
        onChanged();
      } else {
        dirtyRectBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * The list of changed rectangles (areas) of the screen.
     * </pre>
     *
     * <code>repeated .info.malenkov.aspiahwinfo.proto.Rect dirty_rect = 3;</code>
     */
    public Builder addDirtyRect(info.malenkov.aspiahwinfo.proto.Rect value) {
      if (dirtyRectBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureDirtyRectIsMutable();
        dirtyRect_.add(value);
        onChanged();
      } else {
        dirtyRectBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * The list of changed rectangles (areas) of the screen.
     * </pre>
     *
     * <code>repeated .info.malenkov.aspiahwinfo.proto.Rect dirty_rect = 3;</code>
     */
    public Builder addDirtyRect(
        int index, info.malenkov.aspiahwinfo.proto.Rect value) {
      if (dirtyRectBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureDirtyRectIsMutable();
        dirtyRect_.add(index, value);
        onChanged();
      } else {
        dirtyRectBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * The list of changed rectangles (areas) of the screen.
     * </pre>
     *
     * <code>repeated .info.malenkov.aspiahwinfo.proto.Rect dirty_rect = 3;</code>
     */
    public Builder addDirtyRect(
        info.malenkov.aspiahwinfo.proto.Rect.Builder builderForValue) {
      if (dirtyRectBuilder_ == null) {
        ensureDirtyRectIsMutable();
        dirtyRect_.add(builderForValue.build());
        onChanged();
      } else {
        dirtyRectBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * The list of changed rectangles (areas) of the screen.
     * </pre>
     *
     * <code>repeated .info.malenkov.aspiahwinfo.proto.Rect dirty_rect = 3;</code>
     */
    public Builder addDirtyRect(
        int index, info.malenkov.aspiahwinfo.proto.Rect.Builder builderForValue) {
      if (dirtyRectBuilder_ == null) {
        ensureDirtyRectIsMutable();
        dirtyRect_.add(index, builderForValue.build());
        onChanged();
      } else {
        dirtyRectBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * The list of changed rectangles (areas) of the screen.
     * </pre>
     *
     * <code>repeated .info.malenkov.aspiahwinfo.proto.Rect dirty_rect = 3;</code>
     */
    public Builder addAllDirtyRect(
        java.lang.Iterable<? extends info.malenkov.aspiahwinfo.proto.Rect> values) {
      if (dirtyRectBuilder_ == null) {
        ensureDirtyRectIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, dirtyRect_);
        onChanged();
      } else {
        dirtyRectBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * The list of changed rectangles (areas) of the screen.
     * </pre>
     *
     * <code>repeated .info.malenkov.aspiahwinfo.proto.Rect dirty_rect = 3;</code>
     */
    public Builder clearDirtyRect() {
      if (dirtyRectBuilder_ == null) {
        dirtyRect_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
      } else {
        dirtyRectBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * The list of changed rectangles (areas) of the screen.
     * </pre>
     *
     * <code>repeated .info.malenkov.aspiahwinfo.proto.Rect dirty_rect = 3;</code>
     */
    public Builder removeDirtyRect(int index) {
      if (dirtyRectBuilder_ == null) {
        ensureDirtyRectIsMutable();
        dirtyRect_.remove(index);
        onChanged();
      } else {
        dirtyRectBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * The list of changed rectangles (areas) of the screen.
     * </pre>
     *
     * <code>repeated .info.malenkov.aspiahwinfo.proto.Rect dirty_rect = 3;</code>
     */
    public info.malenkov.aspiahwinfo.proto.Rect.Builder getDirtyRectBuilder(
        int index) {
      return getDirtyRectFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * The list of changed rectangles (areas) of the screen.
     * </pre>
     *
     * <code>repeated .info.malenkov.aspiahwinfo.proto.Rect dirty_rect = 3;</code>
     */
    public info.malenkov.aspiahwinfo.proto.RectOrBuilder getDirtyRectOrBuilder(
        int index) {
      if (dirtyRectBuilder_ == null) {
        return dirtyRect_.get(index);  } else {
        return dirtyRectBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * The list of changed rectangles (areas) of the screen.
     * </pre>
     *
     * <code>repeated .info.malenkov.aspiahwinfo.proto.Rect dirty_rect = 3;</code>
     */
    public java.util.List<? extends info.malenkov.aspiahwinfo.proto.RectOrBuilder> 
         getDirtyRectOrBuilderList() {
      if (dirtyRectBuilder_ != null) {
        return dirtyRectBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(dirtyRect_);
      }
    }
    /**
     * <pre>
     * The list of changed rectangles (areas) of the screen.
     * </pre>
     *
     * <code>repeated .info.malenkov.aspiahwinfo.proto.Rect dirty_rect = 3;</code>
     */
    public info.malenkov.aspiahwinfo.proto.Rect.Builder addDirtyRectBuilder() {
      return getDirtyRectFieldBuilder().addBuilder(
          info.malenkov.aspiahwinfo.proto.Rect.getDefaultInstance());
    }
    /**
     * <pre>
     * The list of changed rectangles (areas) of the screen.
     * </pre>
     *
     * <code>repeated .info.malenkov.aspiahwinfo.proto.Rect dirty_rect = 3;</code>
     */
    public info.malenkov.aspiahwinfo.proto.Rect.Builder addDirtyRectBuilder(
        int index) {
      return getDirtyRectFieldBuilder().addBuilder(
          index, info.malenkov.aspiahwinfo.proto.Rect.getDefaultInstance());
    }
    /**
     * <pre>
     * The list of changed rectangles (areas) of the screen.
     * </pre>
     *
     * <code>repeated .info.malenkov.aspiahwinfo.proto.Rect dirty_rect = 3;</code>
     */
    public java.util.List<info.malenkov.aspiahwinfo.proto.Rect.Builder> 
         getDirtyRectBuilderList() {
      return getDirtyRectFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        info.malenkov.aspiahwinfo.proto.Rect, info.malenkov.aspiahwinfo.proto.Rect.Builder, info.malenkov.aspiahwinfo.proto.RectOrBuilder> 
        getDirtyRectFieldBuilder() {
      if (dirtyRectBuilder_ == null) {
        dirtyRectBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            info.malenkov.aspiahwinfo.proto.Rect, info.malenkov.aspiahwinfo.proto.Rect.Builder, info.malenkov.aspiahwinfo.proto.RectOrBuilder>(
                dirtyRect_,
                ((bitField0_ & 0x00000001) != 0),
                getParentForChildren(),
                isClean());
        dirtyRect_ = null;
      }
      return dirtyRectBuilder_;
    }

    private com.google.protobuf.ByteString data_ = com.google.protobuf.ByteString.EMPTY;
    /**
     * <pre>
     * Video packet data.
     * </pre>
     *
     * <code>bytes data = 4;</code>
     * @return The data.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getData() {
      return data_;
    }
    /**
     * <pre>
     * Video packet data.
     * </pre>
     *
     * <code>bytes data = 4;</code>
     * @param value The data to set.
     * @return This builder for chaining.
     */
    public Builder setData(com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      data_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Video packet data.
     * </pre>
     *
     * <code>bytes data = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearData() {
      
      data_ = getDefaultInstance().getData();
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:info.malenkov.aspiahwinfo.proto.VideoPacket)
  }

  // @@protoc_insertion_point(class_scope:info.malenkov.aspiahwinfo.proto.VideoPacket)
  private static final info.malenkov.aspiahwinfo.proto.VideoPacket DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new info.malenkov.aspiahwinfo.proto.VideoPacket();
  }

  public static info.malenkov.aspiahwinfo.proto.VideoPacket getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<VideoPacket>
      PARSER = new com.google.protobuf.AbstractParser<VideoPacket>() {
    @java.lang.Override
    public VideoPacket parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new VideoPacket(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<VideoPacket> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<VideoPacket> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public info.malenkov.aspiahwinfo.proto.VideoPacket getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

