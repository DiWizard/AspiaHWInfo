// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: aspia.desktop.proto

package info.malenkov.aspiahwinfo.proto;

/**
 * Protobuf type {@code info.malenkov.aspiahwinfo.proto.VideoPacketFormat}
 */
public final class VideoPacketFormat extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:info.malenkov.aspiahwinfo.proto.VideoPacketFormat)
    VideoPacketFormatOrBuilder {
private static final long serialVersionUID = 0L;
  // Use VideoPacketFormat.newBuilder() to construct.
  private VideoPacketFormat(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private VideoPacketFormat() {
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new VideoPacketFormat();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private VideoPacketFormat(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            info.malenkov.aspiahwinfo.proto.Rect.Builder subBuilder = null;
            if (videoRect_ != null) {
              subBuilder = videoRect_.toBuilder();
            }
            videoRect_ = input.readMessage(info.malenkov.aspiahwinfo.proto.Rect.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(videoRect_);
              videoRect_ = subBuilder.buildPartial();
            }

            break;
          }
          case 18: {
            info.malenkov.aspiahwinfo.proto.PixelFormat.Builder subBuilder = null;
            if (pixelFormat_ != null) {
              subBuilder = pixelFormat_.toBuilder();
            }
            pixelFormat_ = input.readMessage(info.malenkov.aspiahwinfo.proto.PixelFormat.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(pixelFormat_);
              pixelFormat_ = subBuilder.buildPartial();
            }

            break;
          }
          case 26: {
            info.malenkov.aspiahwinfo.proto.Size.Builder subBuilder = null;
            if (screenSize_ != null) {
              subBuilder = screenSize_.toBuilder();
            }
            screenSize_ = input.readMessage(info.malenkov.aspiahwinfo.proto.Size.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(screenSize_);
              screenSize_ = subBuilder.buildPartial();
            }

            break;
          }
          case 32: {

            capturerType_ = input.readUInt32();
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (com.google.protobuf.UninitializedMessageException e) {
      throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return info.malenkov.aspiahwinfo.proto.AspiaDesktop.internal_static_info_malenkov_aspiahwinfo_proto_VideoPacketFormat_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return info.malenkov.aspiahwinfo.proto.AspiaDesktop.internal_static_info_malenkov_aspiahwinfo_proto_VideoPacketFormat_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            info.malenkov.aspiahwinfo.proto.VideoPacketFormat.class, info.malenkov.aspiahwinfo.proto.VideoPacketFormat.Builder.class);
  }

  public static final int VIDEO_RECT_FIELD_NUMBER = 1;
  private info.malenkov.aspiahwinfo.proto.Rect videoRect_;
  /**
   * <code>.info.malenkov.aspiahwinfo.proto.Rect video_rect = 1;</code>
   * @return Whether the videoRect field is set.
   */
  @java.lang.Override
  public boolean hasVideoRect() {
    return videoRect_ != null;
  }
  /**
   * <code>.info.malenkov.aspiahwinfo.proto.Rect video_rect = 1;</code>
   * @return The videoRect.
   */
  @java.lang.Override
  public info.malenkov.aspiahwinfo.proto.Rect getVideoRect() {
    return videoRect_ == null ? info.malenkov.aspiahwinfo.proto.Rect.getDefaultInstance() : videoRect_;
  }
  /**
   * <code>.info.malenkov.aspiahwinfo.proto.Rect video_rect = 1;</code>
   */
  @java.lang.Override
  public info.malenkov.aspiahwinfo.proto.RectOrBuilder getVideoRectOrBuilder() {
    return getVideoRect();
  }

  public static final int PIXEL_FORMAT_FIELD_NUMBER = 2;
  private info.malenkov.aspiahwinfo.proto.PixelFormat pixelFormat_;
  /**
   * <code>.info.malenkov.aspiahwinfo.proto.PixelFormat pixel_format = 2;</code>
   * @return Whether the pixelFormat field is set.
   */
  @java.lang.Override
  public boolean hasPixelFormat() {
    return pixelFormat_ != null;
  }
  /**
   * <code>.info.malenkov.aspiahwinfo.proto.PixelFormat pixel_format = 2;</code>
   * @return The pixelFormat.
   */
  @java.lang.Override
  public info.malenkov.aspiahwinfo.proto.PixelFormat getPixelFormat() {
    return pixelFormat_ == null ? info.malenkov.aspiahwinfo.proto.PixelFormat.getDefaultInstance() : pixelFormat_;
  }
  /**
   * <code>.info.malenkov.aspiahwinfo.proto.PixelFormat pixel_format = 2;</code>
   */
  @java.lang.Override
  public info.malenkov.aspiahwinfo.proto.PixelFormatOrBuilder getPixelFormatOrBuilder() {
    return getPixelFormat();
  }

  public static final int SCREEN_SIZE_FIELD_NUMBER = 3;
  private info.malenkov.aspiahwinfo.proto.Size screenSize_;
  /**
   * <code>.info.malenkov.aspiahwinfo.proto.Size screen_size = 3;</code>
   * @return Whether the screenSize field is set.
   */
  @java.lang.Override
  public boolean hasScreenSize() {
    return screenSize_ != null;
  }
  /**
   * <code>.info.malenkov.aspiahwinfo.proto.Size screen_size = 3;</code>
   * @return The screenSize.
   */
  @java.lang.Override
  public info.malenkov.aspiahwinfo.proto.Size getScreenSize() {
    return screenSize_ == null ? info.malenkov.aspiahwinfo.proto.Size.getDefaultInstance() : screenSize_;
  }
  /**
   * <code>.info.malenkov.aspiahwinfo.proto.Size screen_size = 3;</code>
   */
  @java.lang.Override
  public info.malenkov.aspiahwinfo.proto.SizeOrBuilder getScreenSizeOrBuilder() {
    return getScreenSize();
  }

  public static final int CAPTURER_TYPE_FIELD_NUMBER = 4;
  private int capturerType_;
  /**
   * <code>uint32 capturer_type = 4;</code>
   * @return The capturerType.
   */
  @java.lang.Override
  public int getCapturerType() {
    return capturerType_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (videoRect_ != null) {
      output.writeMessage(1, getVideoRect());
    }
    if (pixelFormat_ != null) {
      output.writeMessage(2, getPixelFormat());
    }
    if (screenSize_ != null) {
      output.writeMessage(3, getScreenSize());
    }
    if (capturerType_ != 0) {
      output.writeUInt32(4, capturerType_);
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (videoRect_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getVideoRect());
    }
    if (pixelFormat_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, getPixelFormat());
    }
    if (screenSize_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, getScreenSize());
    }
    if (capturerType_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(4, capturerType_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof info.malenkov.aspiahwinfo.proto.VideoPacketFormat)) {
      return super.equals(obj);
    }
    info.malenkov.aspiahwinfo.proto.VideoPacketFormat other = (info.malenkov.aspiahwinfo.proto.VideoPacketFormat) obj;

    if (hasVideoRect() != other.hasVideoRect()) return false;
    if (hasVideoRect()) {
      if (!getVideoRect()
          .equals(other.getVideoRect())) return false;
    }
    if (hasPixelFormat() != other.hasPixelFormat()) return false;
    if (hasPixelFormat()) {
      if (!getPixelFormat()
          .equals(other.getPixelFormat())) return false;
    }
    if (hasScreenSize() != other.hasScreenSize()) return false;
    if (hasScreenSize()) {
      if (!getScreenSize()
          .equals(other.getScreenSize())) return false;
    }
    if (getCapturerType()
        != other.getCapturerType()) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasVideoRect()) {
      hash = (37 * hash) + VIDEO_RECT_FIELD_NUMBER;
      hash = (53 * hash) + getVideoRect().hashCode();
    }
    if (hasPixelFormat()) {
      hash = (37 * hash) + PIXEL_FORMAT_FIELD_NUMBER;
      hash = (53 * hash) + getPixelFormat().hashCode();
    }
    if (hasScreenSize()) {
      hash = (37 * hash) + SCREEN_SIZE_FIELD_NUMBER;
      hash = (53 * hash) + getScreenSize().hashCode();
    }
    hash = (37 * hash) + CAPTURER_TYPE_FIELD_NUMBER;
    hash = (53 * hash) + getCapturerType();
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static info.malenkov.aspiahwinfo.proto.VideoPacketFormat parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static info.malenkov.aspiahwinfo.proto.VideoPacketFormat parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static info.malenkov.aspiahwinfo.proto.VideoPacketFormat parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static info.malenkov.aspiahwinfo.proto.VideoPacketFormat parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static info.malenkov.aspiahwinfo.proto.VideoPacketFormat parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static info.malenkov.aspiahwinfo.proto.VideoPacketFormat parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static info.malenkov.aspiahwinfo.proto.VideoPacketFormat parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static info.malenkov.aspiahwinfo.proto.VideoPacketFormat parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static info.malenkov.aspiahwinfo.proto.VideoPacketFormat parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static info.malenkov.aspiahwinfo.proto.VideoPacketFormat parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static info.malenkov.aspiahwinfo.proto.VideoPacketFormat parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static info.malenkov.aspiahwinfo.proto.VideoPacketFormat parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(info.malenkov.aspiahwinfo.proto.VideoPacketFormat prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code info.malenkov.aspiahwinfo.proto.VideoPacketFormat}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:info.malenkov.aspiahwinfo.proto.VideoPacketFormat)
      info.malenkov.aspiahwinfo.proto.VideoPacketFormatOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return info.malenkov.aspiahwinfo.proto.AspiaDesktop.internal_static_info_malenkov_aspiahwinfo_proto_VideoPacketFormat_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return info.malenkov.aspiahwinfo.proto.AspiaDesktop.internal_static_info_malenkov_aspiahwinfo_proto_VideoPacketFormat_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              info.malenkov.aspiahwinfo.proto.VideoPacketFormat.class, info.malenkov.aspiahwinfo.proto.VideoPacketFormat.Builder.class);
    }

    // Construct using info.malenkov.aspiahwinfo.proto.VideoPacketFormat.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      if (videoRectBuilder_ == null) {
        videoRect_ = null;
      } else {
        videoRect_ = null;
        videoRectBuilder_ = null;
      }
      if (pixelFormatBuilder_ == null) {
        pixelFormat_ = null;
      } else {
        pixelFormat_ = null;
        pixelFormatBuilder_ = null;
      }
      if (screenSizeBuilder_ == null) {
        screenSize_ = null;
      } else {
        screenSize_ = null;
        screenSizeBuilder_ = null;
      }
      capturerType_ = 0;

      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return info.malenkov.aspiahwinfo.proto.AspiaDesktop.internal_static_info_malenkov_aspiahwinfo_proto_VideoPacketFormat_descriptor;
    }

    @java.lang.Override
    public info.malenkov.aspiahwinfo.proto.VideoPacketFormat getDefaultInstanceForType() {
      return info.malenkov.aspiahwinfo.proto.VideoPacketFormat.getDefaultInstance();
    }

    @java.lang.Override
    public info.malenkov.aspiahwinfo.proto.VideoPacketFormat build() {
      info.malenkov.aspiahwinfo.proto.VideoPacketFormat result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public info.malenkov.aspiahwinfo.proto.VideoPacketFormat buildPartial() {
      info.malenkov.aspiahwinfo.proto.VideoPacketFormat result = new info.malenkov.aspiahwinfo.proto.VideoPacketFormat(this);
      if (videoRectBuilder_ == null) {
        result.videoRect_ = videoRect_;
      } else {
        result.videoRect_ = videoRectBuilder_.build();
      }
      if (pixelFormatBuilder_ == null) {
        result.pixelFormat_ = pixelFormat_;
      } else {
        result.pixelFormat_ = pixelFormatBuilder_.build();
      }
      if (screenSizeBuilder_ == null) {
        result.screenSize_ = screenSize_;
      } else {
        result.screenSize_ = screenSizeBuilder_.build();
      }
      result.capturerType_ = capturerType_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof info.malenkov.aspiahwinfo.proto.VideoPacketFormat) {
        return mergeFrom((info.malenkov.aspiahwinfo.proto.VideoPacketFormat)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(info.malenkov.aspiahwinfo.proto.VideoPacketFormat other) {
      if (other == info.malenkov.aspiahwinfo.proto.VideoPacketFormat.getDefaultInstance()) return this;
      if (other.hasVideoRect()) {
        mergeVideoRect(other.getVideoRect());
      }
      if (other.hasPixelFormat()) {
        mergePixelFormat(other.getPixelFormat());
      }
      if (other.hasScreenSize()) {
        mergeScreenSize(other.getScreenSize());
      }
      if (other.getCapturerType() != 0) {
        setCapturerType(other.getCapturerType());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      info.malenkov.aspiahwinfo.proto.VideoPacketFormat parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (info.malenkov.aspiahwinfo.proto.VideoPacketFormat) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private info.malenkov.aspiahwinfo.proto.Rect videoRect_;
    private com.google.protobuf.SingleFieldBuilderV3<
        info.malenkov.aspiahwinfo.proto.Rect, info.malenkov.aspiahwinfo.proto.Rect.Builder, info.malenkov.aspiahwinfo.proto.RectOrBuilder> videoRectBuilder_;
    /**
     * <code>.info.malenkov.aspiahwinfo.proto.Rect video_rect = 1;</code>
     * @return Whether the videoRect field is set.
     */
    public boolean hasVideoRect() {
      return videoRectBuilder_ != null || videoRect_ != null;
    }
    /**
     * <code>.info.malenkov.aspiahwinfo.proto.Rect video_rect = 1;</code>
     * @return The videoRect.
     */
    public info.malenkov.aspiahwinfo.proto.Rect getVideoRect() {
      if (videoRectBuilder_ == null) {
        return videoRect_ == null ? info.malenkov.aspiahwinfo.proto.Rect.getDefaultInstance() : videoRect_;
      } else {
        return videoRectBuilder_.getMessage();
      }
    }
    /**
     * <code>.info.malenkov.aspiahwinfo.proto.Rect video_rect = 1;</code>
     */
    public Builder setVideoRect(info.malenkov.aspiahwinfo.proto.Rect value) {
      if (videoRectBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        videoRect_ = value;
        onChanged();
      } else {
        videoRectBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>.info.malenkov.aspiahwinfo.proto.Rect video_rect = 1;</code>
     */
    public Builder setVideoRect(
        info.malenkov.aspiahwinfo.proto.Rect.Builder builderForValue) {
      if (videoRectBuilder_ == null) {
        videoRect_ = builderForValue.build();
        onChanged();
      } else {
        videoRectBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>.info.malenkov.aspiahwinfo.proto.Rect video_rect = 1;</code>
     */
    public Builder mergeVideoRect(info.malenkov.aspiahwinfo.proto.Rect value) {
      if (videoRectBuilder_ == null) {
        if (videoRect_ != null) {
          videoRect_ =
            info.malenkov.aspiahwinfo.proto.Rect.newBuilder(videoRect_).mergeFrom(value).buildPartial();
        } else {
          videoRect_ = value;
        }
        onChanged();
      } else {
        videoRectBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>.info.malenkov.aspiahwinfo.proto.Rect video_rect = 1;</code>
     */
    public Builder clearVideoRect() {
      if (videoRectBuilder_ == null) {
        videoRect_ = null;
        onChanged();
      } else {
        videoRect_ = null;
        videoRectBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>.info.malenkov.aspiahwinfo.proto.Rect video_rect = 1;</code>
     */
    public info.malenkov.aspiahwinfo.proto.Rect.Builder getVideoRectBuilder() {
      
      onChanged();
      return getVideoRectFieldBuilder().getBuilder();
    }
    /**
     * <code>.info.malenkov.aspiahwinfo.proto.Rect video_rect = 1;</code>
     */
    public info.malenkov.aspiahwinfo.proto.RectOrBuilder getVideoRectOrBuilder() {
      if (videoRectBuilder_ != null) {
        return videoRectBuilder_.getMessageOrBuilder();
      } else {
        return videoRect_ == null ?
            info.malenkov.aspiahwinfo.proto.Rect.getDefaultInstance() : videoRect_;
      }
    }
    /**
     * <code>.info.malenkov.aspiahwinfo.proto.Rect video_rect = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        info.malenkov.aspiahwinfo.proto.Rect, info.malenkov.aspiahwinfo.proto.Rect.Builder, info.malenkov.aspiahwinfo.proto.RectOrBuilder> 
        getVideoRectFieldBuilder() {
      if (videoRectBuilder_ == null) {
        videoRectBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            info.malenkov.aspiahwinfo.proto.Rect, info.malenkov.aspiahwinfo.proto.Rect.Builder, info.malenkov.aspiahwinfo.proto.RectOrBuilder>(
                getVideoRect(),
                getParentForChildren(),
                isClean());
        videoRect_ = null;
      }
      return videoRectBuilder_;
    }

    private info.malenkov.aspiahwinfo.proto.PixelFormat pixelFormat_;
    private com.google.protobuf.SingleFieldBuilderV3<
        info.malenkov.aspiahwinfo.proto.PixelFormat, info.malenkov.aspiahwinfo.proto.PixelFormat.Builder, info.malenkov.aspiahwinfo.proto.PixelFormatOrBuilder> pixelFormatBuilder_;
    /**
     * <code>.info.malenkov.aspiahwinfo.proto.PixelFormat pixel_format = 2;</code>
     * @return Whether the pixelFormat field is set.
     */
    public boolean hasPixelFormat() {
      return pixelFormatBuilder_ != null || pixelFormat_ != null;
    }
    /**
     * <code>.info.malenkov.aspiahwinfo.proto.PixelFormat pixel_format = 2;</code>
     * @return The pixelFormat.
     */
    public info.malenkov.aspiahwinfo.proto.PixelFormat getPixelFormat() {
      if (pixelFormatBuilder_ == null) {
        return pixelFormat_ == null ? info.malenkov.aspiahwinfo.proto.PixelFormat.getDefaultInstance() : pixelFormat_;
      } else {
        return pixelFormatBuilder_.getMessage();
      }
    }
    /**
     * <code>.info.malenkov.aspiahwinfo.proto.PixelFormat pixel_format = 2;</code>
     */
    public Builder setPixelFormat(info.malenkov.aspiahwinfo.proto.PixelFormat value) {
      if (pixelFormatBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        pixelFormat_ = value;
        onChanged();
      } else {
        pixelFormatBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>.info.malenkov.aspiahwinfo.proto.PixelFormat pixel_format = 2;</code>
     */
    public Builder setPixelFormat(
        info.malenkov.aspiahwinfo.proto.PixelFormat.Builder builderForValue) {
      if (pixelFormatBuilder_ == null) {
        pixelFormat_ = builderForValue.build();
        onChanged();
      } else {
        pixelFormatBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>.info.malenkov.aspiahwinfo.proto.PixelFormat pixel_format = 2;</code>
     */
    public Builder mergePixelFormat(info.malenkov.aspiahwinfo.proto.PixelFormat value) {
      if (pixelFormatBuilder_ == null) {
        if (pixelFormat_ != null) {
          pixelFormat_ =
            info.malenkov.aspiahwinfo.proto.PixelFormat.newBuilder(pixelFormat_).mergeFrom(value).buildPartial();
        } else {
          pixelFormat_ = value;
        }
        onChanged();
      } else {
        pixelFormatBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>.info.malenkov.aspiahwinfo.proto.PixelFormat pixel_format = 2;</code>
     */
    public Builder clearPixelFormat() {
      if (pixelFormatBuilder_ == null) {
        pixelFormat_ = null;
        onChanged();
      } else {
        pixelFormat_ = null;
        pixelFormatBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>.info.malenkov.aspiahwinfo.proto.PixelFormat pixel_format = 2;</code>
     */
    public info.malenkov.aspiahwinfo.proto.PixelFormat.Builder getPixelFormatBuilder() {
      
      onChanged();
      return getPixelFormatFieldBuilder().getBuilder();
    }
    /**
     * <code>.info.malenkov.aspiahwinfo.proto.PixelFormat pixel_format = 2;</code>
     */
    public info.malenkov.aspiahwinfo.proto.PixelFormatOrBuilder getPixelFormatOrBuilder() {
      if (pixelFormatBuilder_ != null) {
        return pixelFormatBuilder_.getMessageOrBuilder();
      } else {
        return pixelFormat_ == null ?
            info.malenkov.aspiahwinfo.proto.PixelFormat.getDefaultInstance() : pixelFormat_;
      }
    }
    /**
     * <code>.info.malenkov.aspiahwinfo.proto.PixelFormat pixel_format = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        info.malenkov.aspiahwinfo.proto.PixelFormat, info.malenkov.aspiahwinfo.proto.PixelFormat.Builder, info.malenkov.aspiahwinfo.proto.PixelFormatOrBuilder> 
        getPixelFormatFieldBuilder() {
      if (pixelFormatBuilder_ == null) {
        pixelFormatBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            info.malenkov.aspiahwinfo.proto.PixelFormat, info.malenkov.aspiahwinfo.proto.PixelFormat.Builder, info.malenkov.aspiahwinfo.proto.PixelFormatOrBuilder>(
                getPixelFormat(),
                getParentForChildren(),
                isClean());
        pixelFormat_ = null;
      }
      return pixelFormatBuilder_;
    }

    private info.malenkov.aspiahwinfo.proto.Size screenSize_;
    private com.google.protobuf.SingleFieldBuilderV3<
        info.malenkov.aspiahwinfo.proto.Size, info.malenkov.aspiahwinfo.proto.Size.Builder, info.malenkov.aspiahwinfo.proto.SizeOrBuilder> screenSizeBuilder_;
    /**
     * <code>.info.malenkov.aspiahwinfo.proto.Size screen_size = 3;</code>
     * @return Whether the screenSize field is set.
     */
    public boolean hasScreenSize() {
      return screenSizeBuilder_ != null || screenSize_ != null;
    }
    /**
     * <code>.info.malenkov.aspiahwinfo.proto.Size screen_size = 3;</code>
     * @return The screenSize.
     */
    public info.malenkov.aspiahwinfo.proto.Size getScreenSize() {
      if (screenSizeBuilder_ == null) {
        return screenSize_ == null ? info.malenkov.aspiahwinfo.proto.Size.getDefaultInstance() : screenSize_;
      } else {
        return screenSizeBuilder_.getMessage();
      }
    }
    /**
     * <code>.info.malenkov.aspiahwinfo.proto.Size screen_size = 3;</code>
     */
    public Builder setScreenSize(info.malenkov.aspiahwinfo.proto.Size value) {
      if (screenSizeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        screenSize_ = value;
        onChanged();
      } else {
        screenSizeBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>.info.malenkov.aspiahwinfo.proto.Size screen_size = 3;</code>
     */
    public Builder setScreenSize(
        info.malenkov.aspiahwinfo.proto.Size.Builder builderForValue) {
      if (screenSizeBuilder_ == null) {
        screenSize_ = builderForValue.build();
        onChanged();
      } else {
        screenSizeBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>.info.malenkov.aspiahwinfo.proto.Size screen_size = 3;</code>
     */
    public Builder mergeScreenSize(info.malenkov.aspiahwinfo.proto.Size value) {
      if (screenSizeBuilder_ == null) {
        if (screenSize_ != null) {
          screenSize_ =
            info.malenkov.aspiahwinfo.proto.Size.newBuilder(screenSize_).mergeFrom(value).buildPartial();
        } else {
          screenSize_ = value;
        }
        onChanged();
      } else {
        screenSizeBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>.info.malenkov.aspiahwinfo.proto.Size screen_size = 3;</code>
     */
    public Builder clearScreenSize() {
      if (screenSizeBuilder_ == null) {
        screenSize_ = null;
        onChanged();
      } else {
        screenSize_ = null;
        screenSizeBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>.info.malenkov.aspiahwinfo.proto.Size screen_size = 3;</code>
     */
    public info.malenkov.aspiahwinfo.proto.Size.Builder getScreenSizeBuilder() {
      
      onChanged();
      return getScreenSizeFieldBuilder().getBuilder();
    }
    /**
     * <code>.info.malenkov.aspiahwinfo.proto.Size screen_size = 3;</code>
     */
    public info.malenkov.aspiahwinfo.proto.SizeOrBuilder getScreenSizeOrBuilder() {
      if (screenSizeBuilder_ != null) {
        return screenSizeBuilder_.getMessageOrBuilder();
      } else {
        return screenSize_ == null ?
            info.malenkov.aspiahwinfo.proto.Size.getDefaultInstance() : screenSize_;
      }
    }
    /**
     * <code>.info.malenkov.aspiahwinfo.proto.Size screen_size = 3;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        info.malenkov.aspiahwinfo.proto.Size, info.malenkov.aspiahwinfo.proto.Size.Builder, info.malenkov.aspiahwinfo.proto.SizeOrBuilder> 
        getScreenSizeFieldBuilder() {
      if (screenSizeBuilder_ == null) {
        screenSizeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            info.malenkov.aspiahwinfo.proto.Size, info.malenkov.aspiahwinfo.proto.Size.Builder, info.malenkov.aspiahwinfo.proto.SizeOrBuilder>(
                getScreenSize(),
                getParentForChildren(),
                isClean());
        screenSize_ = null;
      }
      return screenSizeBuilder_;
    }

    private int capturerType_ ;
    /**
     * <code>uint32 capturer_type = 4;</code>
     * @return The capturerType.
     */
    @java.lang.Override
    public int getCapturerType() {
      return capturerType_;
    }
    /**
     * <code>uint32 capturer_type = 4;</code>
     * @param value The capturerType to set.
     * @return This builder for chaining.
     */
    public Builder setCapturerType(int value) {
      
      capturerType_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>uint32 capturer_type = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearCapturerType() {
      
      capturerType_ = 0;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:info.malenkov.aspiahwinfo.proto.VideoPacketFormat)
  }

  // @@protoc_insertion_point(class_scope:info.malenkov.aspiahwinfo.proto.VideoPacketFormat)
  private static final info.malenkov.aspiahwinfo.proto.VideoPacketFormat DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new info.malenkov.aspiahwinfo.proto.VideoPacketFormat();
  }

  public static info.malenkov.aspiahwinfo.proto.VideoPacketFormat getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<VideoPacketFormat>
      PARSER = new com.google.protobuf.AbstractParser<VideoPacketFormat>() {
    @java.lang.Override
    public VideoPacketFormat parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new VideoPacketFormat(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<VideoPacketFormat> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<VideoPacketFormat> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public info.malenkov.aspiahwinfo.proto.VideoPacketFormat getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

