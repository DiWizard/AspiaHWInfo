// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: aspia.system_info.proto

package info.malenkov.aspiahwinfo.proto;

/**
 * Protobuf type {@code info.malenkov.aspiahwinfo.proto.Monitors}
 */
public final class Monitors extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:info.malenkov.aspiahwinfo.proto.Monitors)
    MonitorsOrBuilder {
private static final long serialVersionUID = 0L;
  // Use Monitors.newBuilder() to construct.
  private Monitors(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private Monitors() {
    monitor_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new Monitors();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private Monitors(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            if (!((mutable_bitField0_ & 0x00000001) != 0)) {
              monitor_ = new java.util.ArrayList<info.malenkov.aspiahwinfo.proto.Monitors.Monitor>();
              mutable_bitField0_ |= 0x00000001;
            }
            monitor_.add(
                input.readMessage(info.malenkov.aspiahwinfo.proto.Monitors.Monitor.parser(), extensionRegistry));
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (com.google.protobuf.UninitializedMessageException e) {
      throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000001) != 0)) {
        monitor_ = java.util.Collections.unmodifiableList(monitor_);
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return info.malenkov.aspiahwinfo.proto.AspiaSystemInfo.internal_static_info_malenkov_aspiahwinfo_proto_Monitors_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return info.malenkov.aspiahwinfo.proto.AspiaSystemInfo.internal_static_info_malenkov_aspiahwinfo_proto_Monitors_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            info.malenkov.aspiahwinfo.proto.Monitors.class, info.malenkov.aspiahwinfo.proto.Monitors.Builder.class);
  }

  public interface MonitorOrBuilder extends
      // @@protoc_insertion_point(interface_extends:info.malenkov.aspiahwinfo.proto.Monitors.Monitor)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string system_name = 1;</code>
     * @return The systemName.
     */
    java.lang.String getSystemName();
    /**
     * <code>string system_name = 1;</code>
     * @return The bytes for systemName.
     */
    com.google.protobuf.ByteString
        getSystemNameBytes();

    /**
     * <code>string monitor_name = 2;</code>
     * @return The monitorName.
     */
    java.lang.String getMonitorName();
    /**
     * <code>string monitor_name = 2;</code>
     * @return The bytes for monitorName.
     */
    com.google.protobuf.ByteString
        getMonitorNameBytes();

    /**
     * <code>string manufacturer_name = 3;</code>
     * @return The manufacturerName.
     */
    java.lang.String getManufacturerName();
    /**
     * <code>string manufacturer_name = 3;</code>
     * @return The bytes for manufacturerName.
     */
    com.google.protobuf.ByteString
        getManufacturerNameBytes();

    /**
     * <code>string monitor_id = 4;</code>
     * @return The monitorId.
     */
    java.lang.String getMonitorId();
    /**
     * <code>string monitor_id = 4;</code>
     * @return The bytes for monitorId.
     */
    com.google.protobuf.ByteString
        getMonitorIdBytes();

    /**
     * <code>string serial_number = 5;</code>
     * @return The serialNumber.
     */
    java.lang.String getSerialNumber();
    /**
     * <code>string serial_number = 5;</code>
     * @return The bytes for serialNumber.
     */
    com.google.protobuf.ByteString
        getSerialNumberBytes();

    /**
     * <code>int32 edid_version = 6;</code>
     * @return The edidVersion.
     */
    int getEdidVersion();

    /**
     * <code>int32 edid_revision = 7;</code>
     * @return The edidRevision.
     */
    int getEdidRevision();

    /**
     * <code>int32 week_of_manufacture = 8;</code>
     * @return The weekOfManufacture.
     */
    int getWeekOfManufacture();

    /**
     * <code>int32 year_of_manufacture = 9;</code>
     * @return The yearOfManufacture.
     */
    int getYearOfManufacture();

    /**
     * <code>int32 max_horizontal_image_size = 10;</code>
     * @return The maxHorizontalImageSize.
     */
    int getMaxHorizontalImageSize();

    /**
     * <code>int32 max_vertical_image_size = 11;</code>
     * @return The maxVerticalImageSize.
     */
    int getMaxVerticalImageSize();

    /**
     * <code>int32 horizontal_resolution = 12;</code>
     * @return The horizontalResolution.
     */
    int getHorizontalResolution();

    /**
     * <code>int32 vertical_resoulution = 13;</code>
     * @return The verticalResoulution.
     */
    int getVerticalResoulution();

    /**
     * <code>double gamma = 14;</code>
     * @return The gamma.
     */
    double getGamma();

    /**
     * <code>int32 min_horizontal_rate = 15;</code>
     * @return The minHorizontalRate.
     */
    int getMinHorizontalRate();

    /**
     * <code>int32 max_horizontal_rate = 16;</code>
     * @return The maxHorizontalRate.
     */
    int getMaxHorizontalRate();

    /**
     * <code>int32 min_vertical_rate = 17;</code>
     * @return The minVerticalRate.
     */
    int getMinVerticalRate();

    /**
     * <code>int32 max_vertical_rate = 18;</code>
     * @return The maxVerticalRate.
     */
    int getMaxVerticalRate();

    /**
     * <code>double pixel_clock = 19;</code>
     * @return The pixelClock.
     */
    double getPixelClock();

    /**
     * <code>int32 max_pixel_clock = 20;</code>
     * @return The maxPixelClock.
     */
    int getMaxPixelClock();

    /**
     * <code>.info.malenkov.aspiahwinfo.proto.Monitors.Monitor.InputSignalType input_signal_type = 21;</code>
     * @return The enum numeric value on the wire for inputSignalType.
     */
    int getInputSignalTypeValue();
    /**
     * <code>.info.malenkov.aspiahwinfo.proto.Monitors.Monitor.InputSignalType input_signal_type = 21;</code>
     * @return The inputSignalType.
     */
    info.malenkov.aspiahwinfo.proto.Monitors.Monitor.InputSignalType getInputSignalType();

    /**
     * <code>bool default_gtf_supported = 22;</code>
     * @return The defaultGtfSupported.
     */
    boolean getDefaultGtfSupported();

    /**
     * <code>bool suspend_supported = 23;</code>
     * @return The suspendSupported.
     */
    boolean getSuspendSupported();

    /**
     * <code>bool standby_supported = 24;</code>
     * @return The standbySupported.
     */
    boolean getStandbySupported();

    /**
     * <code>bool active_off_supported = 25;</code>
     * @return The activeOffSupported.
     */
    boolean getActiveOffSupported();

    /**
     * <code>bool preferred_timing_mode_supported = 26;</code>
     * @return The preferredTimingModeSupported.
     */
    boolean getPreferredTimingModeSupported();

    /**
     * <code>bool srgb_supported = 27;</code>
     * @return The srgbSupported.
     */
    boolean getSrgbSupported();

    /**
     * <code>repeated .info.malenkov.aspiahwinfo.proto.Monitors.Monitor.Timing timings = 28;</code>
     */
    java.util.List<info.malenkov.aspiahwinfo.proto.Monitors.Monitor.Timing> 
        getTimingsList();
    /**
     * <code>repeated .info.malenkov.aspiahwinfo.proto.Monitors.Monitor.Timing timings = 28;</code>
     */
    info.malenkov.aspiahwinfo.proto.Monitors.Monitor.Timing getTimings(int index);
    /**
     * <code>repeated .info.malenkov.aspiahwinfo.proto.Monitors.Monitor.Timing timings = 28;</code>
     */
    int getTimingsCount();
    /**
     * <code>repeated .info.malenkov.aspiahwinfo.proto.Monitors.Monitor.Timing timings = 28;</code>
     */
    java.util.List<? extends info.malenkov.aspiahwinfo.proto.Monitors.Monitor.TimingOrBuilder> 
        getTimingsOrBuilderList();
    /**
     * <code>repeated .info.malenkov.aspiahwinfo.proto.Monitors.Monitor.Timing timings = 28;</code>
     */
    info.malenkov.aspiahwinfo.proto.Monitors.Monitor.TimingOrBuilder getTimingsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code info.malenkov.aspiahwinfo.proto.Monitors.Monitor}
   */
  public static final class Monitor extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:info.malenkov.aspiahwinfo.proto.Monitors.Monitor)
      MonitorOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Monitor.newBuilder() to construct.
    private Monitor(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Monitor() {
      systemName_ = "";
      monitorName_ = "";
      manufacturerName_ = "";
      monitorId_ = "";
      serialNumber_ = "";
      inputSignalType_ = 0;
      timings_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Monitor();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Monitor(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              systemName_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              monitorName_ = s;
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              manufacturerName_ = s;
              break;
            }
            case 34: {
              java.lang.String s = input.readStringRequireUtf8();

              monitorId_ = s;
              break;
            }
            case 42: {
              java.lang.String s = input.readStringRequireUtf8();

              serialNumber_ = s;
              break;
            }
            case 48: {

              edidVersion_ = input.readInt32();
              break;
            }
            case 56: {

              edidRevision_ = input.readInt32();
              break;
            }
            case 64: {

              weekOfManufacture_ = input.readInt32();
              break;
            }
            case 72: {

              yearOfManufacture_ = input.readInt32();
              break;
            }
            case 80: {

              maxHorizontalImageSize_ = input.readInt32();
              break;
            }
            case 88: {

              maxVerticalImageSize_ = input.readInt32();
              break;
            }
            case 96: {

              horizontalResolution_ = input.readInt32();
              break;
            }
            case 104: {

              verticalResoulution_ = input.readInt32();
              break;
            }
            case 113: {

              gamma_ = input.readDouble();
              break;
            }
            case 120: {

              minHorizontalRate_ = input.readInt32();
              break;
            }
            case 128: {

              maxHorizontalRate_ = input.readInt32();
              break;
            }
            case 136: {

              minVerticalRate_ = input.readInt32();
              break;
            }
            case 144: {

              maxVerticalRate_ = input.readInt32();
              break;
            }
            case 153: {

              pixelClock_ = input.readDouble();
              break;
            }
            case 160: {

              maxPixelClock_ = input.readInt32();
              break;
            }
            case 168: {
              int rawValue = input.readEnum();

              inputSignalType_ = rawValue;
              break;
            }
            case 176: {

              defaultGtfSupported_ = input.readBool();
              break;
            }
            case 184: {

              suspendSupported_ = input.readBool();
              break;
            }
            case 192: {

              standbySupported_ = input.readBool();
              break;
            }
            case 200: {

              activeOffSupported_ = input.readBool();
              break;
            }
            case 208: {

              preferredTimingModeSupported_ = input.readBool();
              break;
            }
            case 216: {

              srgbSupported_ = input.readBool();
              break;
            }
            case 226: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                timings_ = new java.util.ArrayList<info.malenkov.aspiahwinfo.proto.Monitors.Monitor.Timing>();
                mutable_bitField0_ |= 0x00000001;
              }
              timings_.add(
                  input.readMessage(info.malenkov.aspiahwinfo.proto.Monitors.Monitor.Timing.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          timings_ = java.util.Collections.unmodifiableList(timings_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return info.malenkov.aspiahwinfo.proto.AspiaSystemInfo.internal_static_info_malenkov_aspiahwinfo_proto_Monitors_Monitor_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return info.malenkov.aspiahwinfo.proto.AspiaSystemInfo.internal_static_info_malenkov_aspiahwinfo_proto_Monitors_Monitor_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              info.malenkov.aspiahwinfo.proto.Monitors.Monitor.class, info.malenkov.aspiahwinfo.proto.Monitors.Monitor.Builder.class);
    }

    /**
     * Protobuf enum {@code info.malenkov.aspiahwinfo.proto.Monitors.Monitor.InputSignalType}
     */
    public enum InputSignalType
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>INPUT_SIGNAL_TYPE_UNKNOWN = 0;</code>
       */
      INPUT_SIGNAL_TYPE_UNKNOWN(0),
      /**
       * <code>INPUT_SIGNAL_TYPE_ANALOG = 1;</code>
       */
      INPUT_SIGNAL_TYPE_ANALOG(1),
      /**
       * <code>INPUT_SIGNAL_TYPE_DIGITAL = 2;</code>
       */
      INPUT_SIGNAL_TYPE_DIGITAL(2),
      UNRECOGNIZED(-1),
      ;

      /**
       * <code>INPUT_SIGNAL_TYPE_UNKNOWN = 0;</code>
       */
      public static final int INPUT_SIGNAL_TYPE_UNKNOWN_VALUE = 0;
      /**
       * <code>INPUT_SIGNAL_TYPE_ANALOG = 1;</code>
       */
      public static final int INPUT_SIGNAL_TYPE_ANALOG_VALUE = 1;
      /**
       * <code>INPUT_SIGNAL_TYPE_DIGITAL = 2;</code>
       */
      public static final int INPUT_SIGNAL_TYPE_DIGITAL_VALUE = 2;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static InputSignalType valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static InputSignalType forNumber(int value) {
        switch (value) {
          case 0: return INPUT_SIGNAL_TYPE_UNKNOWN;
          case 1: return INPUT_SIGNAL_TYPE_ANALOG;
          case 2: return INPUT_SIGNAL_TYPE_DIGITAL;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<InputSignalType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          InputSignalType> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<InputSignalType>() {
              public InputSignalType findValueByNumber(int number) {
                return InputSignalType.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalStateException(
              "Can't get the descriptor of an unrecognized enum value.");
        }
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return info.malenkov.aspiahwinfo.proto.Monitors.Monitor.getDescriptor().getEnumTypes().get(0);
      }

      private static final InputSignalType[] VALUES = values();

      public static InputSignalType valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private InputSignalType(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:info.malenkov.aspiahwinfo.proto.Monitors.Monitor.InputSignalType)
    }

    public interface TimingOrBuilder extends
        // @@protoc_insertion_point(interface_extends:info.malenkov.aspiahwinfo.proto.Monitors.Monitor.Timing)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>int32 width = 1;</code>
       * @return The width.
       */
      int getWidth();

      /**
       * <code>int32 height = 2;</code>
       * @return The height.
       */
      int getHeight();

      /**
       * <code>int32 frequency = 3;</code>
       * @return The frequency.
       */
      int getFrequency();
    }
    /**
     * Protobuf type {@code info.malenkov.aspiahwinfo.proto.Monitors.Monitor.Timing}
     */
    public static final class Timing extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:info.malenkov.aspiahwinfo.proto.Monitors.Monitor.Timing)
        TimingOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use Timing.newBuilder() to construct.
      private Timing(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private Timing() {
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new Timing();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private Timing(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {

                width_ = input.readInt32();
                break;
              }
              case 16: {

                height_ = input.readInt32();
                break;
              }
              case 24: {

                frequency_ = input.readInt32();
                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return info.malenkov.aspiahwinfo.proto.AspiaSystemInfo.internal_static_info_malenkov_aspiahwinfo_proto_Monitors_Monitor_Timing_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return info.malenkov.aspiahwinfo.proto.AspiaSystemInfo.internal_static_info_malenkov_aspiahwinfo_proto_Monitors_Monitor_Timing_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                info.malenkov.aspiahwinfo.proto.Monitors.Monitor.Timing.class, info.malenkov.aspiahwinfo.proto.Monitors.Monitor.Timing.Builder.class);
      }

      public static final int WIDTH_FIELD_NUMBER = 1;
      private int width_;
      /**
       * <code>int32 width = 1;</code>
       * @return The width.
       */
      @java.lang.Override
      public int getWidth() {
        return width_;
      }

      public static final int HEIGHT_FIELD_NUMBER = 2;
      private int height_;
      /**
       * <code>int32 height = 2;</code>
       * @return The height.
       */
      @java.lang.Override
      public int getHeight() {
        return height_;
      }

      public static final int FREQUENCY_FIELD_NUMBER = 3;
      private int frequency_;
      /**
       * <code>int32 frequency = 3;</code>
       * @return The frequency.
       */
      @java.lang.Override
      public int getFrequency() {
        return frequency_;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (width_ != 0) {
          output.writeInt32(1, width_);
        }
        if (height_ != 0) {
          output.writeInt32(2, height_);
        }
        if (frequency_ != 0) {
          output.writeInt32(3, frequency_);
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (width_ != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(1, width_);
        }
        if (height_ != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(2, height_);
        }
        if (frequency_ != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(3, frequency_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof info.malenkov.aspiahwinfo.proto.Monitors.Monitor.Timing)) {
          return super.equals(obj);
        }
        info.malenkov.aspiahwinfo.proto.Monitors.Monitor.Timing other = (info.malenkov.aspiahwinfo.proto.Monitors.Monitor.Timing) obj;

        if (getWidth()
            != other.getWidth()) return false;
        if (getHeight()
            != other.getHeight()) return false;
        if (getFrequency()
            != other.getFrequency()) return false;
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + WIDTH_FIELD_NUMBER;
        hash = (53 * hash) + getWidth();
        hash = (37 * hash) + HEIGHT_FIELD_NUMBER;
        hash = (53 * hash) + getHeight();
        hash = (37 * hash) + FREQUENCY_FIELD_NUMBER;
        hash = (53 * hash) + getFrequency();
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static info.malenkov.aspiahwinfo.proto.Monitors.Monitor.Timing parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static info.malenkov.aspiahwinfo.proto.Monitors.Monitor.Timing parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static info.malenkov.aspiahwinfo.proto.Monitors.Monitor.Timing parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static info.malenkov.aspiahwinfo.proto.Monitors.Monitor.Timing parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static info.malenkov.aspiahwinfo.proto.Monitors.Monitor.Timing parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static info.malenkov.aspiahwinfo.proto.Monitors.Monitor.Timing parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static info.malenkov.aspiahwinfo.proto.Monitors.Monitor.Timing parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static info.malenkov.aspiahwinfo.proto.Monitors.Monitor.Timing parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static info.malenkov.aspiahwinfo.proto.Monitors.Monitor.Timing parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static info.malenkov.aspiahwinfo.proto.Monitors.Monitor.Timing parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static info.malenkov.aspiahwinfo.proto.Monitors.Monitor.Timing parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static info.malenkov.aspiahwinfo.proto.Monitors.Monitor.Timing parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(info.malenkov.aspiahwinfo.proto.Monitors.Monitor.Timing prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code info.malenkov.aspiahwinfo.proto.Monitors.Monitor.Timing}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:info.malenkov.aspiahwinfo.proto.Monitors.Monitor.Timing)
          info.malenkov.aspiahwinfo.proto.Monitors.Monitor.TimingOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return info.malenkov.aspiahwinfo.proto.AspiaSystemInfo.internal_static_info_malenkov_aspiahwinfo_proto_Monitors_Monitor_Timing_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return info.malenkov.aspiahwinfo.proto.AspiaSystemInfo.internal_static_info_malenkov_aspiahwinfo_proto_Monitors_Monitor_Timing_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  info.malenkov.aspiahwinfo.proto.Monitors.Monitor.Timing.class, info.malenkov.aspiahwinfo.proto.Monitors.Monitor.Timing.Builder.class);
        }

        // Construct using info.malenkov.aspiahwinfo.proto.Monitors.Monitor.Timing.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          width_ = 0;

          height_ = 0;

          frequency_ = 0;

          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return info.malenkov.aspiahwinfo.proto.AspiaSystemInfo.internal_static_info_malenkov_aspiahwinfo_proto_Monitors_Monitor_Timing_descriptor;
        }

        @java.lang.Override
        public info.malenkov.aspiahwinfo.proto.Monitors.Monitor.Timing getDefaultInstanceForType() {
          return info.malenkov.aspiahwinfo.proto.Monitors.Monitor.Timing.getDefaultInstance();
        }

        @java.lang.Override
        public info.malenkov.aspiahwinfo.proto.Monitors.Monitor.Timing build() {
          info.malenkov.aspiahwinfo.proto.Monitors.Monitor.Timing result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public info.malenkov.aspiahwinfo.proto.Monitors.Monitor.Timing buildPartial() {
          info.malenkov.aspiahwinfo.proto.Monitors.Monitor.Timing result = new info.malenkov.aspiahwinfo.proto.Monitors.Monitor.Timing(this);
          result.width_ = width_;
          result.height_ = height_;
          result.frequency_ = frequency_;
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof info.malenkov.aspiahwinfo.proto.Monitors.Monitor.Timing) {
            return mergeFrom((info.malenkov.aspiahwinfo.proto.Monitors.Monitor.Timing)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(info.malenkov.aspiahwinfo.proto.Monitors.Monitor.Timing other) {
          if (other == info.malenkov.aspiahwinfo.proto.Monitors.Monitor.Timing.getDefaultInstance()) return this;
          if (other.getWidth() != 0) {
            setWidth(other.getWidth());
          }
          if (other.getHeight() != 0) {
            setHeight(other.getHeight());
          }
          if (other.getFrequency() != 0) {
            setFrequency(other.getFrequency());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          info.malenkov.aspiahwinfo.proto.Monitors.Monitor.Timing parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (info.malenkov.aspiahwinfo.proto.Monitors.Monitor.Timing) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private int width_ ;
        /**
         * <code>int32 width = 1;</code>
         * @return The width.
         */
        @java.lang.Override
        public int getWidth() {
          return width_;
        }
        /**
         * <code>int32 width = 1;</code>
         * @param value The width to set.
         * @return This builder for chaining.
         */
        public Builder setWidth(int value) {
          
          width_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>int32 width = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearWidth() {
          
          width_ = 0;
          onChanged();
          return this;
        }

        private int height_ ;
        /**
         * <code>int32 height = 2;</code>
         * @return The height.
         */
        @java.lang.Override
        public int getHeight() {
          return height_;
        }
        /**
         * <code>int32 height = 2;</code>
         * @param value The height to set.
         * @return This builder for chaining.
         */
        public Builder setHeight(int value) {
          
          height_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>int32 height = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearHeight() {
          
          height_ = 0;
          onChanged();
          return this;
        }

        private int frequency_ ;
        /**
         * <code>int32 frequency = 3;</code>
         * @return The frequency.
         */
        @java.lang.Override
        public int getFrequency() {
          return frequency_;
        }
        /**
         * <code>int32 frequency = 3;</code>
         * @param value The frequency to set.
         * @return This builder for chaining.
         */
        public Builder setFrequency(int value) {
          
          frequency_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>int32 frequency = 3;</code>
         * @return This builder for chaining.
         */
        public Builder clearFrequency() {
          
          frequency_ = 0;
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:info.malenkov.aspiahwinfo.proto.Monitors.Monitor.Timing)
      }

      // @@protoc_insertion_point(class_scope:info.malenkov.aspiahwinfo.proto.Monitors.Monitor.Timing)
      private static final info.malenkov.aspiahwinfo.proto.Monitors.Monitor.Timing DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new info.malenkov.aspiahwinfo.proto.Monitors.Monitor.Timing();
      }

      public static info.malenkov.aspiahwinfo.proto.Monitors.Monitor.Timing getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<Timing>
          PARSER = new com.google.protobuf.AbstractParser<Timing>() {
        @java.lang.Override
        public Timing parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Timing(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<Timing> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Timing> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public info.malenkov.aspiahwinfo.proto.Monitors.Monitor.Timing getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public static final int SYSTEM_NAME_FIELD_NUMBER = 1;
    private volatile java.lang.Object systemName_;
    /**
     * <code>string system_name = 1;</code>
     * @return The systemName.
     */
    @java.lang.Override
    public java.lang.String getSystemName() {
      java.lang.Object ref = systemName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        systemName_ = s;
        return s;
      }
    }
    /**
     * <code>string system_name = 1;</code>
     * @return The bytes for systemName.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getSystemNameBytes() {
      java.lang.Object ref = systemName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        systemName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int MONITOR_NAME_FIELD_NUMBER = 2;
    private volatile java.lang.Object monitorName_;
    /**
     * <code>string monitor_name = 2;</code>
     * @return The monitorName.
     */
    @java.lang.Override
    public java.lang.String getMonitorName() {
      java.lang.Object ref = monitorName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        monitorName_ = s;
        return s;
      }
    }
    /**
     * <code>string monitor_name = 2;</code>
     * @return The bytes for monitorName.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getMonitorNameBytes() {
      java.lang.Object ref = monitorName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        monitorName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int MANUFACTURER_NAME_FIELD_NUMBER = 3;
    private volatile java.lang.Object manufacturerName_;
    /**
     * <code>string manufacturer_name = 3;</code>
     * @return The manufacturerName.
     */
    @java.lang.Override
    public java.lang.String getManufacturerName() {
      java.lang.Object ref = manufacturerName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        manufacturerName_ = s;
        return s;
      }
    }
    /**
     * <code>string manufacturer_name = 3;</code>
     * @return The bytes for manufacturerName.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getManufacturerNameBytes() {
      java.lang.Object ref = manufacturerName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        manufacturerName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int MONITOR_ID_FIELD_NUMBER = 4;
    private volatile java.lang.Object monitorId_;
    /**
     * <code>string monitor_id = 4;</code>
     * @return The monitorId.
     */
    @java.lang.Override
    public java.lang.String getMonitorId() {
      java.lang.Object ref = monitorId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        monitorId_ = s;
        return s;
      }
    }
    /**
     * <code>string monitor_id = 4;</code>
     * @return The bytes for monitorId.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getMonitorIdBytes() {
      java.lang.Object ref = monitorId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        monitorId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SERIAL_NUMBER_FIELD_NUMBER = 5;
    private volatile java.lang.Object serialNumber_;
    /**
     * <code>string serial_number = 5;</code>
     * @return The serialNumber.
     */
    @java.lang.Override
    public java.lang.String getSerialNumber() {
      java.lang.Object ref = serialNumber_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        serialNumber_ = s;
        return s;
      }
    }
    /**
     * <code>string serial_number = 5;</code>
     * @return The bytes for serialNumber.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getSerialNumberBytes() {
      java.lang.Object ref = serialNumber_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        serialNumber_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int EDID_VERSION_FIELD_NUMBER = 6;
    private int edidVersion_;
    /**
     * <code>int32 edid_version = 6;</code>
     * @return The edidVersion.
     */
    @java.lang.Override
    public int getEdidVersion() {
      return edidVersion_;
    }

    public static final int EDID_REVISION_FIELD_NUMBER = 7;
    private int edidRevision_;
    /**
     * <code>int32 edid_revision = 7;</code>
     * @return The edidRevision.
     */
    @java.lang.Override
    public int getEdidRevision() {
      return edidRevision_;
    }

    public static final int WEEK_OF_MANUFACTURE_FIELD_NUMBER = 8;
    private int weekOfManufacture_;
    /**
     * <code>int32 week_of_manufacture = 8;</code>
     * @return The weekOfManufacture.
     */
    @java.lang.Override
    public int getWeekOfManufacture() {
      return weekOfManufacture_;
    }

    public static final int YEAR_OF_MANUFACTURE_FIELD_NUMBER = 9;
    private int yearOfManufacture_;
    /**
     * <code>int32 year_of_manufacture = 9;</code>
     * @return The yearOfManufacture.
     */
    @java.lang.Override
    public int getYearOfManufacture() {
      return yearOfManufacture_;
    }

    public static final int MAX_HORIZONTAL_IMAGE_SIZE_FIELD_NUMBER = 10;
    private int maxHorizontalImageSize_;
    /**
     * <code>int32 max_horizontal_image_size = 10;</code>
     * @return The maxHorizontalImageSize.
     */
    @java.lang.Override
    public int getMaxHorizontalImageSize() {
      return maxHorizontalImageSize_;
    }

    public static final int MAX_VERTICAL_IMAGE_SIZE_FIELD_NUMBER = 11;
    private int maxVerticalImageSize_;
    /**
     * <code>int32 max_vertical_image_size = 11;</code>
     * @return The maxVerticalImageSize.
     */
    @java.lang.Override
    public int getMaxVerticalImageSize() {
      return maxVerticalImageSize_;
    }

    public static final int HORIZONTAL_RESOLUTION_FIELD_NUMBER = 12;
    private int horizontalResolution_;
    /**
     * <code>int32 horizontal_resolution = 12;</code>
     * @return The horizontalResolution.
     */
    @java.lang.Override
    public int getHorizontalResolution() {
      return horizontalResolution_;
    }

    public static final int VERTICAL_RESOULUTION_FIELD_NUMBER = 13;
    private int verticalResoulution_;
    /**
     * <code>int32 vertical_resoulution = 13;</code>
     * @return The verticalResoulution.
     */
    @java.lang.Override
    public int getVerticalResoulution() {
      return verticalResoulution_;
    }

    public static final int GAMMA_FIELD_NUMBER = 14;
    private double gamma_;
    /**
     * <code>double gamma = 14;</code>
     * @return The gamma.
     */
    @java.lang.Override
    public double getGamma() {
      return gamma_;
    }

    public static final int MIN_HORIZONTAL_RATE_FIELD_NUMBER = 15;
    private int minHorizontalRate_;
    /**
     * <code>int32 min_horizontal_rate = 15;</code>
     * @return The minHorizontalRate.
     */
    @java.lang.Override
    public int getMinHorizontalRate() {
      return minHorizontalRate_;
    }

    public static final int MAX_HORIZONTAL_RATE_FIELD_NUMBER = 16;
    private int maxHorizontalRate_;
    /**
     * <code>int32 max_horizontal_rate = 16;</code>
     * @return The maxHorizontalRate.
     */
    @java.lang.Override
    public int getMaxHorizontalRate() {
      return maxHorizontalRate_;
    }

    public static final int MIN_VERTICAL_RATE_FIELD_NUMBER = 17;
    private int minVerticalRate_;
    /**
     * <code>int32 min_vertical_rate = 17;</code>
     * @return The minVerticalRate.
     */
    @java.lang.Override
    public int getMinVerticalRate() {
      return minVerticalRate_;
    }

    public static final int MAX_VERTICAL_RATE_FIELD_NUMBER = 18;
    private int maxVerticalRate_;
    /**
     * <code>int32 max_vertical_rate = 18;</code>
     * @return The maxVerticalRate.
     */
    @java.lang.Override
    public int getMaxVerticalRate() {
      return maxVerticalRate_;
    }

    public static final int PIXEL_CLOCK_FIELD_NUMBER = 19;
    private double pixelClock_;
    /**
     * <code>double pixel_clock = 19;</code>
     * @return The pixelClock.
     */
    @java.lang.Override
    public double getPixelClock() {
      return pixelClock_;
    }

    public static final int MAX_PIXEL_CLOCK_FIELD_NUMBER = 20;
    private int maxPixelClock_;
    /**
     * <code>int32 max_pixel_clock = 20;</code>
     * @return The maxPixelClock.
     */
    @java.lang.Override
    public int getMaxPixelClock() {
      return maxPixelClock_;
    }

    public static final int INPUT_SIGNAL_TYPE_FIELD_NUMBER = 21;
    private int inputSignalType_;
    /**
     * <code>.info.malenkov.aspiahwinfo.proto.Monitors.Monitor.InputSignalType input_signal_type = 21;</code>
     * @return The enum numeric value on the wire for inputSignalType.
     */
    @java.lang.Override public int getInputSignalTypeValue() {
      return inputSignalType_;
    }
    /**
     * <code>.info.malenkov.aspiahwinfo.proto.Monitors.Monitor.InputSignalType input_signal_type = 21;</code>
     * @return The inputSignalType.
     */
    @java.lang.Override public info.malenkov.aspiahwinfo.proto.Monitors.Monitor.InputSignalType getInputSignalType() {
      @SuppressWarnings("deprecation")
      info.malenkov.aspiahwinfo.proto.Monitors.Monitor.InputSignalType result = info.malenkov.aspiahwinfo.proto.Monitors.Monitor.InputSignalType.valueOf(inputSignalType_);
      return result == null ? info.malenkov.aspiahwinfo.proto.Monitors.Monitor.InputSignalType.UNRECOGNIZED : result;
    }

    public static final int DEFAULT_GTF_SUPPORTED_FIELD_NUMBER = 22;
    private boolean defaultGtfSupported_;
    /**
     * <code>bool default_gtf_supported = 22;</code>
     * @return The defaultGtfSupported.
     */
    @java.lang.Override
    public boolean getDefaultGtfSupported() {
      return defaultGtfSupported_;
    }

    public static final int SUSPEND_SUPPORTED_FIELD_NUMBER = 23;
    private boolean suspendSupported_;
    /**
     * <code>bool suspend_supported = 23;</code>
     * @return The suspendSupported.
     */
    @java.lang.Override
    public boolean getSuspendSupported() {
      return suspendSupported_;
    }

    public static final int STANDBY_SUPPORTED_FIELD_NUMBER = 24;
    private boolean standbySupported_;
    /**
     * <code>bool standby_supported = 24;</code>
     * @return The standbySupported.
     */
    @java.lang.Override
    public boolean getStandbySupported() {
      return standbySupported_;
    }

    public static final int ACTIVE_OFF_SUPPORTED_FIELD_NUMBER = 25;
    private boolean activeOffSupported_;
    /**
     * <code>bool active_off_supported = 25;</code>
     * @return The activeOffSupported.
     */
    @java.lang.Override
    public boolean getActiveOffSupported() {
      return activeOffSupported_;
    }

    public static final int PREFERRED_TIMING_MODE_SUPPORTED_FIELD_NUMBER = 26;
    private boolean preferredTimingModeSupported_;
    /**
     * <code>bool preferred_timing_mode_supported = 26;</code>
     * @return The preferredTimingModeSupported.
     */
    @java.lang.Override
    public boolean getPreferredTimingModeSupported() {
      return preferredTimingModeSupported_;
    }

    public static final int SRGB_SUPPORTED_FIELD_NUMBER = 27;
    private boolean srgbSupported_;
    /**
     * <code>bool srgb_supported = 27;</code>
     * @return The srgbSupported.
     */
    @java.lang.Override
    public boolean getSrgbSupported() {
      return srgbSupported_;
    }

    public static final int TIMINGS_FIELD_NUMBER = 28;
    private java.util.List<info.malenkov.aspiahwinfo.proto.Monitors.Monitor.Timing> timings_;
    /**
     * <code>repeated .info.malenkov.aspiahwinfo.proto.Monitors.Monitor.Timing timings = 28;</code>
     */
    @java.lang.Override
    public java.util.List<info.malenkov.aspiahwinfo.proto.Monitors.Monitor.Timing> getTimingsList() {
      return timings_;
    }
    /**
     * <code>repeated .info.malenkov.aspiahwinfo.proto.Monitors.Monitor.Timing timings = 28;</code>
     */
    @java.lang.Override
    public java.util.List<? extends info.malenkov.aspiahwinfo.proto.Monitors.Monitor.TimingOrBuilder> 
        getTimingsOrBuilderList() {
      return timings_;
    }
    /**
     * <code>repeated .info.malenkov.aspiahwinfo.proto.Monitors.Monitor.Timing timings = 28;</code>
     */
    @java.lang.Override
    public int getTimingsCount() {
      return timings_.size();
    }
    /**
     * <code>repeated .info.malenkov.aspiahwinfo.proto.Monitors.Monitor.Timing timings = 28;</code>
     */
    @java.lang.Override
    public info.malenkov.aspiahwinfo.proto.Monitors.Monitor.Timing getTimings(int index) {
      return timings_.get(index);
    }
    /**
     * <code>repeated .info.malenkov.aspiahwinfo.proto.Monitors.Monitor.Timing timings = 28;</code>
     */
    @java.lang.Override
    public info.malenkov.aspiahwinfo.proto.Monitors.Monitor.TimingOrBuilder getTimingsOrBuilder(
        int index) {
      return timings_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(systemName_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, systemName_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(monitorName_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, monitorName_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(manufacturerName_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, manufacturerName_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(monitorId_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, monitorId_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(serialNumber_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 5, serialNumber_);
      }
      if (edidVersion_ != 0) {
        output.writeInt32(6, edidVersion_);
      }
      if (edidRevision_ != 0) {
        output.writeInt32(7, edidRevision_);
      }
      if (weekOfManufacture_ != 0) {
        output.writeInt32(8, weekOfManufacture_);
      }
      if (yearOfManufacture_ != 0) {
        output.writeInt32(9, yearOfManufacture_);
      }
      if (maxHorizontalImageSize_ != 0) {
        output.writeInt32(10, maxHorizontalImageSize_);
      }
      if (maxVerticalImageSize_ != 0) {
        output.writeInt32(11, maxVerticalImageSize_);
      }
      if (horizontalResolution_ != 0) {
        output.writeInt32(12, horizontalResolution_);
      }
      if (verticalResoulution_ != 0) {
        output.writeInt32(13, verticalResoulution_);
      }
      if (java.lang.Double.doubleToRawLongBits(gamma_) != 0) {
        output.writeDouble(14, gamma_);
      }
      if (minHorizontalRate_ != 0) {
        output.writeInt32(15, minHorizontalRate_);
      }
      if (maxHorizontalRate_ != 0) {
        output.writeInt32(16, maxHorizontalRate_);
      }
      if (minVerticalRate_ != 0) {
        output.writeInt32(17, minVerticalRate_);
      }
      if (maxVerticalRate_ != 0) {
        output.writeInt32(18, maxVerticalRate_);
      }
      if (java.lang.Double.doubleToRawLongBits(pixelClock_) != 0) {
        output.writeDouble(19, pixelClock_);
      }
      if (maxPixelClock_ != 0) {
        output.writeInt32(20, maxPixelClock_);
      }
      if (inputSignalType_ != info.malenkov.aspiahwinfo.proto.Monitors.Monitor.InputSignalType.INPUT_SIGNAL_TYPE_UNKNOWN.getNumber()) {
        output.writeEnum(21, inputSignalType_);
      }
      if (defaultGtfSupported_ != false) {
        output.writeBool(22, defaultGtfSupported_);
      }
      if (suspendSupported_ != false) {
        output.writeBool(23, suspendSupported_);
      }
      if (standbySupported_ != false) {
        output.writeBool(24, standbySupported_);
      }
      if (activeOffSupported_ != false) {
        output.writeBool(25, activeOffSupported_);
      }
      if (preferredTimingModeSupported_ != false) {
        output.writeBool(26, preferredTimingModeSupported_);
      }
      if (srgbSupported_ != false) {
        output.writeBool(27, srgbSupported_);
      }
      for (int i = 0; i < timings_.size(); i++) {
        output.writeMessage(28, timings_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(systemName_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, systemName_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(monitorName_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, monitorName_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(manufacturerName_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, manufacturerName_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(monitorId_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, monitorId_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(serialNumber_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, serialNumber_);
      }
      if (edidVersion_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, edidVersion_);
      }
      if (edidRevision_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, edidRevision_);
      }
      if (weekOfManufacture_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, weekOfManufacture_);
      }
      if (yearOfManufacture_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, yearOfManufacture_);
      }
      if (maxHorizontalImageSize_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, maxHorizontalImageSize_);
      }
      if (maxVerticalImageSize_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(11, maxVerticalImageSize_);
      }
      if (horizontalResolution_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(12, horizontalResolution_);
      }
      if (verticalResoulution_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(13, verticalResoulution_);
      }
      if (java.lang.Double.doubleToRawLongBits(gamma_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(14, gamma_);
      }
      if (minHorizontalRate_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(15, minHorizontalRate_);
      }
      if (maxHorizontalRate_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(16, maxHorizontalRate_);
      }
      if (minVerticalRate_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(17, minVerticalRate_);
      }
      if (maxVerticalRate_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(18, maxVerticalRate_);
      }
      if (java.lang.Double.doubleToRawLongBits(pixelClock_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(19, pixelClock_);
      }
      if (maxPixelClock_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(20, maxPixelClock_);
      }
      if (inputSignalType_ != info.malenkov.aspiahwinfo.proto.Monitors.Monitor.InputSignalType.INPUT_SIGNAL_TYPE_UNKNOWN.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(21, inputSignalType_);
      }
      if (defaultGtfSupported_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(22, defaultGtfSupported_);
      }
      if (suspendSupported_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(23, suspendSupported_);
      }
      if (standbySupported_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(24, standbySupported_);
      }
      if (activeOffSupported_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(25, activeOffSupported_);
      }
      if (preferredTimingModeSupported_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(26, preferredTimingModeSupported_);
      }
      if (srgbSupported_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(27, srgbSupported_);
      }
      for (int i = 0; i < timings_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(28, timings_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof info.malenkov.aspiahwinfo.proto.Monitors.Monitor)) {
        return super.equals(obj);
      }
      info.malenkov.aspiahwinfo.proto.Monitors.Monitor other = (info.malenkov.aspiahwinfo.proto.Monitors.Monitor) obj;

      if (!getSystemName()
          .equals(other.getSystemName())) return false;
      if (!getMonitorName()
          .equals(other.getMonitorName())) return false;
      if (!getManufacturerName()
          .equals(other.getManufacturerName())) return false;
      if (!getMonitorId()
          .equals(other.getMonitorId())) return false;
      if (!getSerialNumber()
          .equals(other.getSerialNumber())) return false;
      if (getEdidVersion()
          != other.getEdidVersion()) return false;
      if (getEdidRevision()
          != other.getEdidRevision()) return false;
      if (getWeekOfManufacture()
          != other.getWeekOfManufacture()) return false;
      if (getYearOfManufacture()
          != other.getYearOfManufacture()) return false;
      if (getMaxHorizontalImageSize()
          != other.getMaxHorizontalImageSize()) return false;
      if (getMaxVerticalImageSize()
          != other.getMaxVerticalImageSize()) return false;
      if (getHorizontalResolution()
          != other.getHorizontalResolution()) return false;
      if (getVerticalResoulution()
          != other.getVerticalResoulution()) return false;
      if (java.lang.Double.doubleToLongBits(getGamma())
          != java.lang.Double.doubleToLongBits(
              other.getGamma())) return false;
      if (getMinHorizontalRate()
          != other.getMinHorizontalRate()) return false;
      if (getMaxHorizontalRate()
          != other.getMaxHorizontalRate()) return false;
      if (getMinVerticalRate()
          != other.getMinVerticalRate()) return false;
      if (getMaxVerticalRate()
          != other.getMaxVerticalRate()) return false;
      if (java.lang.Double.doubleToLongBits(getPixelClock())
          != java.lang.Double.doubleToLongBits(
              other.getPixelClock())) return false;
      if (getMaxPixelClock()
          != other.getMaxPixelClock()) return false;
      if (inputSignalType_ != other.inputSignalType_) return false;
      if (getDefaultGtfSupported()
          != other.getDefaultGtfSupported()) return false;
      if (getSuspendSupported()
          != other.getSuspendSupported()) return false;
      if (getStandbySupported()
          != other.getStandbySupported()) return false;
      if (getActiveOffSupported()
          != other.getActiveOffSupported()) return false;
      if (getPreferredTimingModeSupported()
          != other.getPreferredTimingModeSupported()) return false;
      if (getSrgbSupported()
          != other.getSrgbSupported()) return false;
      if (!getTimingsList()
          .equals(other.getTimingsList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + SYSTEM_NAME_FIELD_NUMBER;
      hash = (53 * hash) + getSystemName().hashCode();
      hash = (37 * hash) + MONITOR_NAME_FIELD_NUMBER;
      hash = (53 * hash) + getMonitorName().hashCode();
      hash = (37 * hash) + MANUFACTURER_NAME_FIELD_NUMBER;
      hash = (53 * hash) + getManufacturerName().hashCode();
      hash = (37 * hash) + MONITOR_ID_FIELD_NUMBER;
      hash = (53 * hash) + getMonitorId().hashCode();
      hash = (37 * hash) + SERIAL_NUMBER_FIELD_NUMBER;
      hash = (53 * hash) + getSerialNumber().hashCode();
      hash = (37 * hash) + EDID_VERSION_FIELD_NUMBER;
      hash = (53 * hash) + getEdidVersion();
      hash = (37 * hash) + EDID_REVISION_FIELD_NUMBER;
      hash = (53 * hash) + getEdidRevision();
      hash = (37 * hash) + WEEK_OF_MANUFACTURE_FIELD_NUMBER;
      hash = (53 * hash) + getWeekOfManufacture();
      hash = (37 * hash) + YEAR_OF_MANUFACTURE_FIELD_NUMBER;
      hash = (53 * hash) + getYearOfManufacture();
      hash = (37 * hash) + MAX_HORIZONTAL_IMAGE_SIZE_FIELD_NUMBER;
      hash = (53 * hash) + getMaxHorizontalImageSize();
      hash = (37 * hash) + MAX_VERTICAL_IMAGE_SIZE_FIELD_NUMBER;
      hash = (53 * hash) + getMaxVerticalImageSize();
      hash = (37 * hash) + HORIZONTAL_RESOLUTION_FIELD_NUMBER;
      hash = (53 * hash) + getHorizontalResolution();
      hash = (37 * hash) + VERTICAL_RESOULUTION_FIELD_NUMBER;
      hash = (53 * hash) + getVerticalResoulution();
      hash = (37 * hash) + GAMMA_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getGamma()));
      hash = (37 * hash) + MIN_HORIZONTAL_RATE_FIELD_NUMBER;
      hash = (53 * hash) + getMinHorizontalRate();
      hash = (37 * hash) + MAX_HORIZONTAL_RATE_FIELD_NUMBER;
      hash = (53 * hash) + getMaxHorizontalRate();
      hash = (37 * hash) + MIN_VERTICAL_RATE_FIELD_NUMBER;
      hash = (53 * hash) + getMinVerticalRate();
      hash = (37 * hash) + MAX_VERTICAL_RATE_FIELD_NUMBER;
      hash = (53 * hash) + getMaxVerticalRate();
      hash = (37 * hash) + PIXEL_CLOCK_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getPixelClock()));
      hash = (37 * hash) + MAX_PIXEL_CLOCK_FIELD_NUMBER;
      hash = (53 * hash) + getMaxPixelClock();
      hash = (37 * hash) + INPUT_SIGNAL_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + inputSignalType_;
      hash = (37 * hash) + DEFAULT_GTF_SUPPORTED_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getDefaultGtfSupported());
      hash = (37 * hash) + SUSPEND_SUPPORTED_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getSuspendSupported());
      hash = (37 * hash) + STANDBY_SUPPORTED_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getStandbySupported());
      hash = (37 * hash) + ACTIVE_OFF_SUPPORTED_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getActiveOffSupported());
      hash = (37 * hash) + PREFERRED_TIMING_MODE_SUPPORTED_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getPreferredTimingModeSupported());
      hash = (37 * hash) + SRGB_SUPPORTED_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getSrgbSupported());
      if (getTimingsCount() > 0) {
        hash = (37 * hash) + TIMINGS_FIELD_NUMBER;
        hash = (53 * hash) + getTimingsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static info.malenkov.aspiahwinfo.proto.Monitors.Monitor parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static info.malenkov.aspiahwinfo.proto.Monitors.Monitor parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static info.malenkov.aspiahwinfo.proto.Monitors.Monitor parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static info.malenkov.aspiahwinfo.proto.Monitors.Monitor parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static info.malenkov.aspiahwinfo.proto.Monitors.Monitor parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static info.malenkov.aspiahwinfo.proto.Monitors.Monitor parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static info.malenkov.aspiahwinfo.proto.Monitors.Monitor parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static info.malenkov.aspiahwinfo.proto.Monitors.Monitor parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static info.malenkov.aspiahwinfo.proto.Monitors.Monitor parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static info.malenkov.aspiahwinfo.proto.Monitors.Monitor parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static info.malenkov.aspiahwinfo.proto.Monitors.Monitor parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static info.malenkov.aspiahwinfo.proto.Monitors.Monitor parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(info.malenkov.aspiahwinfo.proto.Monitors.Monitor prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code info.malenkov.aspiahwinfo.proto.Monitors.Monitor}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:info.malenkov.aspiahwinfo.proto.Monitors.Monitor)
        info.malenkov.aspiahwinfo.proto.Monitors.MonitorOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return info.malenkov.aspiahwinfo.proto.AspiaSystemInfo.internal_static_info_malenkov_aspiahwinfo_proto_Monitors_Monitor_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return info.malenkov.aspiahwinfo.proto.AspiaSystemInfo.internal_static_info_malenkov_aspiahwinfo_proto_Monitors_Monitor_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                info.malenkov.aspiahwinfo.proto.Monitors.Monitor.class, info.malenkov.aspiahwinfo.proto.Monitors.Monitor.Builder.class);
      }

      // Construct using info.malenkov.aspiahwinfo.proto.Monitors.Monitor.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getTimingsFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        systemName_ = "";

        monitorName_ = "";

        manufacturerName_ = "";

        monitorId_ = "";

        serialNumber_ = "";

        edidVersion_ = 0;

        edidRevision_ = 0;

        weekOfManufacture_ = 0;

        yearOfManufacture_ = 0;

        maxHorizontalImageSize_ = 0;

        maxVerticalImageSize_ = 0;

        horizontalResolution_ = 0;

        verticalResoulution_ = 0;

        gamma_ = 0D;

        minHorizontalRate_ = 0;

        maxHorizontalRate_ = 0;

        minVerticalRate_ = 0;

        maxVerticalRate_ = 0;

        pixelClock_ = 0D;

        maxPixelClock_ = 0;

        inputSignalType_ = 0;

        defaultGtfSupported_ = false;

        suspendSupported_ = false;

        standbySupported_ = false;

        activeOffSupported_ = false;

        preferredTimingModeSupported_ = false;

        srgbSupported_ = false;

        if (timingsBuilder_ == null) {
          timings_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          timingsBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return info.malenkov.aspiahwinfo.proto.AspiaSystemInfo.internal_static_info_malenkov_aspiahwinfo_proto_Monitors_Monitor_descriptor;
      }

      @java.lang.Override
      public info.malenkov.aspiahwinfo.proto.Monitors.Monitor getDefaultInstanceForType() {
        return info.malenkov.aspiahwinfo.proto.Monitors.Monitor.getDefaultInstance();
      }

      @java.lang.Override
      public info.malenkov.aspiahwinfo.proto.Monitors.Monitor build() {
        info.malenkov.aspiahwinfo.proto.Monitors.Monitor result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public info.malenkov.aspiahwinfo.proto.Monitors.Monitor buildPartial() {
        info.malenkov.aspiahwinfo.proto.Monitors.Monitor result = new info.malenkov.aspiahwinfo.proto.Monitors.Monitor(this);
        int from_bitField0_ = bitField0_;
        result.systemName_ = systemName_;
        result.monitorName_ = monitorName_;
        result.manufacturerName_ = manufacturerName_;
        result.monitorId_ = monitorId_;
        result.serialNumber_ = serialNumber_;
        result.edidVersion_ = edidVersion_;
        result.edidRevision_ = edidRevision_;
        result.weekOfManufacture_ = weekOfManufacture_;
        result.yearOfManufacture_ = yearOfManufacture_;
        result.maxHorizontalImageSize_ = maxHorizontalImageSize_;
        result.maxVerticalImageSize_ = maxVerticalImageSize_;
        result.horizontalResolution_ = horizontalResolution_;
        result.verticalResoulution_ = verticalResoulution_;
        result.gamma_ = gamma_;
        result.minHorizontalRate_ = minHorizontalRate_;
        result.maxHorizontalRate_ = maxHorizontalRate_;
        result.minVerticalRate_ = minVerticalRate_;
        result.maxVerticalRate_ = maxVerticalRate_;
        result.pixelClock_ = pixelClock_;
        result.maxPixelClock_ = maxPixelClock_;
        result.inputSignalType_ = inputSignalType_;
        result.defaultGtfSupported_ = defaultGtfSupported_;
        result.suspendSupported_ = suspendSupported_;
        result.standbySupported_ = standbySupported_;
        result.activeOffSupported_ = activeOffSupported_;
        result.preferredTimingModeSupported_ = preferredTimingModeSupported_;
        result.srgbSupported_ = srgbSupported_;
        if (timingsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            timings_ = java.util.Collections.unmodifiableList(timings_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.timings_ = timings_;
        } else {
          result.timings_ = timingsBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof info.malenkov.aspiahwinfo.proto.Monitors.Monitor) {
          return mergeFrom((info.malenkov.aspiahwinfo.proto.Monitors.Monitor)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(info.malenkov.aspiahwinfo.proto.Monitors.Monitor other) {
        if (other == info.malenkov.aspiahwinfo.proto.Monitors.Monitor.getDefaultInstance()) return this;
        if (!other.getSystemName().isEmpty()) {
          systemName_ = other.systemName_;
          onChanged();
        }
        if (!other.getMonitorName().isEmpty()) {
          monitorName_ = other.monitorName_;
          onChanged();
        }
        if (!other.getManufacturerName().isEmpty()) {
          manufacturerName_ = other.manufacturerName_;
          onChanged();
        }
        if (!other.getMonitorId().isEmpty()) {
          monitorId_ = other.monitorId_;
          onChanged();
        }
        if (!other.getSerialNumber().isEmpty()) {
          serialNumber_ = other.serialNumber_;
          onChanged();
        }
        if (other.getEdidVersion() != 0) {
          setEdidVersion(other.getEdidVersion());
        }
        if (other.getEdidRevision() != 0) {
          setEdidRevision(other.getEdidRevision());
        }
        if (other.getWeekOfManufacture() != 0) {
          setWeekOfManufacture(other.getWeekOfManufacture());
        }
        if (other.getYearOfManufacture() != 0) {
          setYearOfManufacture(other.getYearOfManufacture());
        }
        if (other.getMaxHorizontalImageSize() != 0) {
          setMaxHorizontalImageSize(other.getMaxHorizontalImageSize());
        }
        if (other.getMaxVerticalImageSize() != 0) {
          setMaxVerticalImageSize(other.getMaxVerticalImageSize());
        }
        if (other.getHorizontalResolution() != 0) {
          setHorizontalResolution(other.getHorizontalResolution());
        }
        if (other.getVerticalResoulution() != 0) {
          setVerticalResoulution(other.getVerticalResoulution());
        }
        if (other.getGamma() != 0D) {
          setGamma(other.getGamma());
        }
        if (other.getMinHorizontalRate() != 0) {
          setMinHorizontalRate(other.getMinHorizontalRate());
        }
        if (other.getMaxHorizontalRate() != 0) {
          setMaxHorizontalRate(other.getMaxHorizontalRate());
        }
        if (other.getMinVerticalRate() != 0) {
          setMinVerticalRate(other.getMinVerticalRate());
        }
        if (other.getMaxVerticalRate() != 0) {
          setMaxVerticalRate(other.getMaxVerticalRate());
        }
        if (other.getPixelClock() != 0D) {
          setPixelClock(other.getPixelClock());
        }
        if (other.getMaxPixelClock() != 0) {
          setMaxPixelClock(other.getMaxPixelClock());
        }
        if (other.inputSignalType_ != 0) {
          setInputSignalTypeValue(other.getInputSignalTypeValue());
        }
        if (other.getDefaultGtfSupported() != false) {
          setDefaultGtfSupported(other.getDefaultGtfSupported());
        }
        if (other.getSuspendSupported() != false) {
          setSuspendSupported(other.getSuspendSupported());
        }
        if (other.getStandbySupported() != false) {
          setStandbySupported(other.getStandbySupported());
        }
        if (other.getActiveOffSupported() != false) {
          setActiveOffSupported(other.getActiveOffSupported());
        }
        if (other.getPreferredTimingModeSupported() != false) {
          setPreferredTimingModeSupported(other.getPreferredTimingModeSupported());
        }
        if (other.getSrgbSupported() != false) {
          setSrgbSupported(other.getSrgbSupported());
        }
        if (timingsBuilder_ == null) {
          if (!other.timings_.isEmpty()) {
            if (timings_.isEmpty()) {
              timings_ = other.timings_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureTimingsIsMutable();
              timings_.addAll(other.timings_);
            }
            onChanged();
          }
        } else {
          if (!other.timings_.isEmpty()) {
            if (timingsBuilder_.isEmpty()) {
              timingsBuilder_.dispose();
              timingsBuilder_ = null;
              timings_ = other.timings_;
              bitField0_ = (bitField0_ & ~0x00000001);
              timingsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getTimingsFieldBuilder() : null;
            } else {
              timingsBuilder_.addAllMessages(other.timings_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        info.malenkov.aspiahwinfo.proto.Monitors.Monitor parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (info.malenkov.aspiahwinfo.proto.Monitors.Monitor) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object systemName_ = "";
      /**
       * <code>string system_name = 1;</code>
       * @return The systemName.
       */
      public java.lang.String getSystemName() {
        java.lang.Object ref = systemName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          systemName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string system_name = 1;</code>
       * @return The bytes for systemName.
       */
      public com.google.protobuf.ByteString
          getSystemNameBytes() {
        java.lang.Object ref = systemName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          systemName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string system_name = 1;</code>
       * @param value The systemName to set.
       * @return This builder for chaining.
       */
      public Builder setSystemName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        systemName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string system_name = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearSystemName() {
        
        systemName_ = getDefaultInstance().getSystemName();
        onChanged();
        return this;
      }
      /**
       * <code>string system_name = 1;</code>
       * @param value The bytes for systemName to set.
       * @return This builder for chaining.
       */
      public Builder setSystemNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        systemName_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object monitorName_ = "";
      /**
       * <code>string monitor_name = 2;</code>
       * @return The monitorName.
       */
      public java.lang.String getMonitorName() {
        java.lang.Object ref = monitorName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          monitorName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string monitor_name = 2;</code>
       * @return The bytes for monitorName.
       */
      public com.google.protobuf.ByteString
          getMonitorNameBytes() {
        java.lang.Object ref = monitorName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          monitorName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string monitor_name = 2;</code>
       * @param value The monitorName to set.
       * @return This builder for chaining.
       */
      public Builder setMonitorName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        monitorName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string monitor_name = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearMonitorName() {
        
        monitorName_ = getDefaultInstance().getMonitorName();
        onChanged();
        return this;
      }
      /**
       * <code>string monitor_name = 2;</code>
       * @param value The bytes for monitorName to set.
       * @return This builder for chaining.
       */
      public Builder setMonitorNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        monitorName_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object manufacturerName_ = "";
      /**
       * <code>string manufacturer_name = 3;</code>
       * @return The manufacturerName.
       */
      public java.lang.String getManufacturerName() {
        java.lang.Object ref = manufacturerName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          manufacturerName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string manufacturer_name = 3;</code>
       * @return The bytes for manufacturerName.
       */
      public com.google.protobuf.ByteString
          getManufacturerNameBytes() {
        java.lang.Object ref = manufacturerName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          manufacturerName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string manufacturer_name = 3;</code>
       * @param value The manufacturerName to set.
       * @return This builder for chaining.
       */
      public Builder setManufacturerName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        manufacturerName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string manufacturer_name = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearManufacturerName() {
        
        manufacturerName_ = getDefaultInstance().getManufacturerName();
        onChanged();
        return this;
      }
      /**
       * <code>string manufacturer_name = 3;</code>
       * @param value The bytes for manufacturerName to set.
       * @return This builder for chaining.
       */
      public Builder setManufacturerNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        manufacturerName_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object monitorId_ = "";
      /**
       * <code>string monitor_id = 4;</code>
       * @return The monitorId.
       */
      public java.lang.String getMonitorId() {
        java.lang.Object ref = monitorId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          monitorId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string monitor_id = 4;</code>
       * @return The bytes for monitorId.
       */
      public com.google.protobuf.ByteString
          getMonitorIdBytes() {
        java.lang.Object ref = monitorId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          monitorId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string monitor_id = 4;</code>
       * @param value The monitorId to set.
       * @return This builder for chaining.
       */
      public Builder setMonitorId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        monitorId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string monitor_id = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearMonitorId() {
        
        monitorId_ = getDefaultInstance().getMonitorId();
        onChanged();
        return this;
      }
      /**
       * <code>string monitor_id = 4;</code>
       * @param value The bytes for monitorId to set.
       * @return This builder for chaining.
       */
      public Builder setMonitorIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        monitorId_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object serialNumber_ = "";
      /**
       * <code>string serial_number = 5;</code>
       * @return The serialNumber.
       */
      public java.lang.String getSerialNumber() {
        java.lang.Object ref = serialNumber_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          serialNumber_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string serial_number = 5;</code>
       * @return The bytes for serialNumber.
       */
      public com.google.protobuf.ByteString
          getSerialNumberBytes() {
        java.lang.Object ref = serialNumber_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          serialNumber_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string serial_number = 5;</code>
       * @param value The serialNumber to set.
       * @return This builder for chaining.
       */
      public Builder setSerialNumber(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        serialNumber_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string serial_number = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearSerialNumber() {
        
        serialNumber_ = getDefaultInstance().getSerialNumber();
        onChanged();
        return this;
      }
      /**
       * <code>string serial_number = 5;</code>
       * @param value The bytes for serialNumber to set.
       * @return This builder for chaining.
       */
      public Builder setSerialNumberBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        serialNumber_ = value;
        onChanged();
        return this;
      }

      private int edidVersion_ ;
      /**
       * <code>int32 edid_version = 6;</code>
       * @return The edidVersion.
       */
      @java.lang.Override
      public int getEdidVersion() {
        return edidVersion_;
      }
      /**
       * <code>int32 edid_version = 6;</code>
       * @param value The edidVersion to set.
       * @return This builder for chaining.
       */
      public Builder setEdidVersion(int value) {
        
        edidVersion_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 edid_version = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearEdidVersion() {
        
        edidVersion_ = 0;
        onChanged();
        return this;
      }

      private int edidRevision_ ;
      /**
       * <code>int32 edid_revision = 7;</code>
       * @return The edidRevision.
       */
      @java.lang.Override
      public int getEdidRevision() {
        return edidRevision_;
      }
      /**
       * <code>int32 edid_revision = 7;</code>
       * @param value The edidRevision to set.
       * @return This builder for chaining.
       */
      public Builder setEdidRevision(int value) {
        
        edidRevision_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 edid_revision = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearEdidRevision() {
        
        edidRevision_ = 0;
        onChanged();
        return this;
      }

      private int weekOfManufacture_ ;
      /**
       * <code>int32 week_of_manufacture = 8;</code>
       * @return The weekOfManufacture.
       */
      @java.lang.Override
      public int getWeekOfManufacture() {
        return weekOfManufacture_;
      }
      /**
       * <code>int32 week_of_manufacture = 8;</code>
       * @param value The weekOfManufacture to set.
       * @return This builder for chaining.
       */
      public Builder setWeekOfManufacture(int value) {
        
        weekOfManufacture_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 week_of_manufacture = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearWeekOfManufacture() {
        
        weekOfManufacture_ = 0;
        onChanged();
        return this;
      }

      private int yearOfManufacture_ ;
      /**
       * <code>int32 year_of_manufacture = 9;</code>
       * @return The yearOfManufacture.
       */
      @java.lang.Override
      public int getYearOfManufacture() {
        return yearOfManufacture_;
      }
      /**
       * <code>int32 year_of_manufacture = 9;</code>
       * @param value The yearOfManufacture to set.
       * @return This builder for chaining.
       */
      public Builder setYearOfManufacture(int value) {
        
        yearOfManufacture_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 year_of_manufacture = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearYearOfManufacture() {
        
        yearOfManufacture_ = 0;
        onChanged();
        return this;
      }

      private int maxHorizontalImageSize_ ;
      /**
       * <code>int32 max_horizontal_image_size = 10;</code>
       * @return The maxHorizontalImageSize.
       */
      @java.lang.Override
      public int getMaxHorizontalImageSize() {
        return maxHorizontalImageSize_;
      }
      /**
       * <code>int32 max_horizontal_image_size = 10;</code>
       * @param value The maxHorizontalImageSize to set.
       * @return This builder for chaining.
       */
      public Builder setMaxHorizontalImageSize(int value) {
        
        maxHorizontalImageSize_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 max_horizontal_image_size = 10;</code>
       * @return This builder for chaining.
       */
      public Builder clearMaxHorizontalImageSize() {
        
        maxHorizontalImageSize_ = 0;
        onChanged();
        return this;
      }

      private int maxVerticalImageSize_ ;
      /**
       * <code>int32 max_vertical_image_size = 11;</code>
       * @return The maxVerticalImageSize.
       */
      @java.lang.Override
      public int getMaxVerticalImageSize() {
        return maxVerticalImageSize_;
      }
      /**
       * <code>int32 max_vertical_image_size = 11;</code>
       * @param value The maxVerticalImageSize to set.
       * @return This builder for chaining.
       */
      public Builder setMaxVerticalImageSize(int value) {
        
        maxVerticalImageSize_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 max_vertical_image_size = 11;</code>
       * @return This builder for chaining.
       */
      public Builder clearMaxVerticalImageSize() {
        
        maxVerticalImageSize_ = 0;
        onChanged();
        return this;
      }

      private int horizontalResolution_ ;
      /**
       * <code>int32 horizontal_resolution = 12;</code>
       * @return The horizontalResolution.
       */
      @java.lang.Override
      public int getHorizontalResolution() {
        return horizontalResolution_;
      }
      /**
       * <code>int32 horizontal_resolution = 12;</code>
       * @param value The horizontalResolution to set.
       * @return This builder for chaining.
       */
      public Builder setHorizontalResolution(int value) {
        
        horizontalResolution_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 horizontal_resolution = 12;</code>
       * @return This builder for chaining.
       */
      public Builder clearHorizontalResolution() {
        
        horizontalResolution_ = 0;
        onChanged();
        return this;
      }

      private int verticalResoulution_ ;
      /**
       * <code>int32 vertical_resoulution = 13;</code>
       * @return The verticalResoulution.
       */
      @java.lang.Override
      public int getVerticalResoulution() {
        return verticalResoulution_;
      }
      /**
       * <code>int32 vertical_resoulution = 13;</code>
       * @param value The verticalResoulution to set.
       * @return This builder for chaining.
       */
      public Builder setVerticalResoulution(int value) {
        
        verticalResoulution_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 vertical_resoulution = 13;</code>
       * @return This builder for chaining.
       */
      public Builder clearVerticalResoulution() {
        
        verticalResoulution_ = 0;
        onChanged();
        return this;
      }

      private double gamma_ ;
      /**
       * <code>double gamma = 14;</code>
       * @return The gamma.
       */
      @java.lang.Override
      public double getGamma() {
        return gamma_;
      }
      /**
       * <code>double gamma = 14;</code>
       * @param value The gamma to set.
       * @return This builder for chaining.
       */
      public Builder setGamma(double value) {
        
        gamma_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double gamma = 14;</code>
       * @return This builder for chaining.
       */
      public Builder clearGamma() {
        
        gamma_ = 0D;
        onChanged();
        return this;
      }

      private int minHorizontalRate_ ;
      /**
       * <code>int32 min_horizontal_rate = 15;</code>
       * @return The minHorizontalRate.
       */
      @java.lang.Override
      public int getMinHorizontalRate() {
        return minHorizontalRate_;
      }
      /**
       * <code>int32 min_horizontal_rate = 15;</code>
       * @param value The minHorizontalRate to set.
       * @return This builder for chaining.
       */
      public Builder setMinHorizontalRate(int value) {
        
        minHorizontalRate_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 min_horizontal_rate = 15;</code>
       * @return This builder for chaining.
       */
      public Builder clearMinHorizontalRate() {
        
        minHorizontalRate_ = 0;
        onChanged();
        return this;
      }

      private int maxHorizontalRate_ ;
      /**
       * <code>int32 max_horizontal_rate = 16;</code>
       * @return The maxHorizontalRate.
       */
      @java.lang.Override
      public int getMaxHorizontalRate() {
        return maxHorizontalRate_;
      }
      /**
       * <code>int32 max_horizontal_rate = 16;</code>
       * @param value The maxHorizontalRate to set.
       * @return This builder for chaining.
       */
      public Builder setMaxHorizontalRate(int value) {
        
        maxHorizontalRate_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 max_horizontal_rate = 16;</code>
       * @return This builder for chaining.
       */
      public Builder clearMaxHorizontalRate() {
        
        maxHorizontalRate_ = 0;
        onChanged();
        return this;
      }

      private int minVerticalRate_ ;
      /**
       * <code>int32 min_vertical_rate = 17;</code>
       * @return The minVerticalRate.
       */
      @java.lang.Override
      public int getMinVerticalRate() {
        return minVerticalRate_;
      }
      /**
       * <code>int32 min_vertical_rate = 17;</code>
       * @param value The minVerticalRate to set.
       * @return This builder for chaining.
       */
      public Builder setMinVerticalRate(int value) {
        
        minVerticalRate_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 min_vertical_rate = 17;</code>
       * @return This builder for chaining.
       */
      public Builder clearMinVerticalRate() {
        
        minVerticalRate_ = 0;
        onChanged();
        return this;
      }

      private int maxVerticalRate_ ;
      /**
       * <code>int32 max_vertical_rate = 18;</code>
       * @return The maxVerticalRate.
       */
      @java.lang.Override
      public int getMaxVerticalRate() {
        return maxVerticalRate_;
      }
      /**
       * <code>int32 max_vertical_rate = 18;</code>
       * @param value The maxVerticalRate to set.
       * @return This builder for chaining.
       */
      public Builder setMaxVerticalRate(int value) {
        
        maxVerticalRate_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 max_vertical_rate = 18;</code>
       * @return This builder for chaining.
       */
      public Builder clearMaxVerticalRate() {
        
        maxVerticalRate_ = 0;
        onChanged();
        return this;
      }

      private double pixelClock_ ;
      /**
       * <code>double pixel_clock = 19;</code>
       * @return The pixelClock.
       */
      @java.lang.Override
      public double getPixelClock() {
        return pixelClock_;
      }
      /**
       * <code>double pixel_clock = 19;</code>
       * @param value The pixelClock to set.
       * @return This builder for chaining.
       */
      public Builder setPixelClock(double value) {
        
        pixelClock_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double pixel_clock = 19;</code>
       * @return This builder for chaining.
       */
      public Builder clearPixelClock() {
        
        pixelClock_ = 0D;
        onChanged();
        return this;
      }

      private int maxPixelClock_ ;
      /**
       * <code>int32 max_pixel_clock = 20;</code>
       * @return The maxPixelClock.
       */
      @java.lang.Override
      public int getMaxPixelClock() {
        return maxPixelClock_;
      }
      /**
       * <code>int32 max_pixel_clock = 20;</code>
       * @param value The maxPixelClock to set.
       * @return This builder for chaining.
       */
      public Builder setMaxPixelClock(int value) {
        
        maxPixelClock_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 max_pixel_clock = 20;</code>
       * @return This builder for chaining.
       */
      public Builder clearMaxPixelClock() {
        
        maxPixelClock_ = 0;
        onChanged();
        return this;
      }

      private int inputSignalType_ = 0;
      /**
       * <code>.info.malenkov.aspiahwinfo.proto.Monitors.Monitor.InputSignalType input_signal_type = 21;</code>
       * @return The enum numeric value on the wire for inputSignalType.
       */
      @java.lang.Override public int getInputSignalTypeValue() {
        return inputSignalType_;
      }
      /**
       * <code>.info.malenkov.aspiahwinfo.proto.Monitors.Monitor.InputSignalType input_signal_type = 21;</code>
       * @param value The enum numeric value on the wire for inputSignalType to set.
       * @return This builder for chaining.
       */
      public Builder setInputSignalTypeValue(int value) {
        
        inputSignalType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.info.malenkov.aspiahwinfo.proto.Monitors.Monitor.InputSignalType input_signal_type = 21;</code>
       * @return The inputSignalType.
       */
      @java.lang.Override
      public info.malenkov.aspiahwinfo.proto.Monitors.Monitor.InputSignalType getInputSignalType() {
        @SuppressWarnings("deprecation")
        info.malenkov.aspiahwinfo.proto.Monitors.Monitor.InputSignalType result = info.malenkov.aspiahwinfo.proto.Monitors.Monitor.InputSignalType.valueOf(inputSignalType_);
        return result == null ? info.malenkov.aspiahwinfo.proto.Monitors.Monitor.InputSignalType.UNRECOGNIZED : result;
      }
      /**
       * <code>.info.malenkov.aspiahwinfo.proto.Monitors.Monitor.InputSignalType input_signal_type = 21;</code>
       * @param value The inputSignalType to set.
       * @return This builder for chaining.
       */
      public Builder setInputSignalType(info.malenkov.aspiahwinfo.proto.Monitors.Monitor.InputSignalType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        inputSignalType_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.info.malenkov.aspiahwinfo.proto.Monitors.Monitor.InputSignalType input_signal_type = 21;</code>
       * @return This builder for chaining.
       */
      public Builder clearInputSignalType() {
        
        inputSignalType_ = 0;
        onChanged();
        return this;
      }

      private boolean defaultGtfSupported_ ;
      /**
       * <code>bool default_gtf_supported = 22;</code>
       * @return The defaultGtfSupported.
       */
      @java.lang.Override
      public boolean getDefaultGtfSupported() {
        return defaultGtfSupported_;
      }
      /**
       * <code>bool default_gtf_supported = 22;</code>
       * @param value The defaultGtfSupported to set.
       * @return This builder for chaining.
       */
      public Builder setDefaultGtfSupported(boolean value) {
        
        defaultGtfSupported_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool default_gtf_supported = 22;</code>
       * @return This builder for chaining.
       */
      public Builder clearDefaultGtfSupported() {
        
        defaultGtfSupported_ = false;
        onChanged();
        return this;
      }

      private boolean suspendSupported_ ;
      /**
       * <code>bool suspend_supported = 23;</code>
       * @return The suspendSupported.
       */
      @java.lang.Override
      public boolean getSuspendSupported() {
        return suspendSupported_;
      }
      /**
       * <code>bool suspend_supported = 23;</code>
       * @param value The suspendSupported to set.
       * @return This builder for chaining.
       */
      public Builder setSuspendSupported(boolean value) {
        
        suspendSupported_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool suspend_supported = 23;</code>
       * @return This builder for chaining.
       */
      public Builder clearSuspendSupported() {
        
        suspendSupported_ = false;
        onChanged();
        return this;
      }

      private boolean standbySupported_ ;
      /**
       * <code>bool standby_supported = 24;</code>
       * @return The standbySupported.
       */
      @java.lang.Override
      public boolean getStandbySupported() {
        return standbySupported_;
      }
      /**
       * <code>bool standby_supported = 24;</code>
       * @param value The standbySupported to set.
       * @return This builder for chaining.
       */
      public Builder setStandbySupported(boolean value) {
        
        standbySupported_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool standby_supported = 24;</code>
       * @return This builder for chaining.
       */
      public Builder clearStandbySupported() {
        
        standbySupported_ = false;
        onChanged();
        return this;
      }

      private boolean activeOffSupported_ ;
      /**
       * <code>bool active_off_supported = 25;</code>
       * @return The activeOffSupported.
       */
      @java.lang.Override
      public boolean getActiveOffSupported() {
        return activeOffSupported_;
      }
      /**
       * <code>bool active_off_supported = 25;</code>
       * @param value The activeOffSupported to set.
       * @return This builder for chaining.
       */
      public Builder setActiveOffSupported(boolean value) {
        
        activeOffSupported_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool active_off_supported = 25;</code>
       * @return This builder for chaining.
       */
      public Builder clearActiveOffSupported() {
        
        activeOffSupported_ = false;
        onChanged();
        return this;
      }

      private boolean preferredTimingModeSupported_ ;
      /**
       * <code>bool preferred_timing_mode_supported = 26;</code>
       * @return The preferredTimingModeSupported.
       */
      @java.lang.Override
      public boolean getPreferredTimingModeSupported() {
        return preferredTimingModeSupported_;
      }
      /**
       * <code>bool preferred_timing_mode_supported = 26;</code>
       * @param value The preferredTimingModeSupported to set.
       * @return This builder for chaining.
       */
      public Builder setPreferredTimingModeSupported(boolean value) {
        
        preferredTimingModeSupported_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool preferred_timing_mode_supported = 26;</code>
       * @return This builder for chaining.
       */
      public Builder clearPreferredTimingModeSupported() {
        
        preferredTimingModeSupported_ = false;
        onChanged();
        return this;
      }

      private boolean srgbSupported_ ;
      /**
       * <code>bool srgb_supported = 27;</code>
       * @return The srgbSupported.
       */
      @java.lang.Override
      public boolean getSrgbSupported() {
        return srgbSupported_;
      }
      /**
       * <code>bool srgb_supported = 27;</code>
       * @param value The srgbSupported to set.
       * @return This builder for chaining.
       */
      public Builder setSrgbSupported(boolean value) {
        
        srgbSupported_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool srgb_supported = 27;</code>
       * @return This builder for chaining.
       */
      public Builder clearSrgbSupported() {
        
        srgbSupported_ = false;
        onChanged();
        return this;
      }

      private java.util.List<info.malenkov.aspiahwinfo.proto.Monitors.Monitor.Timing> timings_ =
        java.util.Collections.emptyList();
      private void ensureTimingsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          timings_ = new java.util.ArrayList<info.malenkov.aspiahwinfo.proto.Monitors.Monitor.Timing>(timings_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          info.malenkov.aspiahwinfo.proto.Monitors.Monitor.Timing, info.malenkov.aspiahwinfo.proto.Monitors.Monitor.Timing.Builder, info.malenkov.aspiahwinfo.proto.Monitors.Monitor.TimingOrBuilder> timingsBuilder_;

      /**
       * <code>repeated .info.malenkov.aspiahwinfo.proto.Monitors.Monitor.Timing timings = 28;</code>
       */
      public java.util.List<info.malenkov.aspiahwinfo.proto.Monitors.Monitor.Timing> getTimingsList() {
        if (timingsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(timings_);
        } else {
          return timingsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .info.malenkov.aspiahwinfo.proto.Monitors.Monitor.Timing timings = 28;</code>
       */
      public int getTimingsCount() {
        if (timingsBuilder_ == null) {
          return timings_.size();
        } else {
          return timingsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .info.malenkov.aspiahwinfo.proto.Monitors.Monitor.Timing timings = 28;</code>
       */
      public info.malenkov.aspiahwinfo.proto.Monitors.Monitor.Timing getTimings(int index) {
        if (timingsBuilder_ == null) {
          return timings_.get(index);
        } else {
          return timingsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .info.malenkov.aspiahwinfo.proto.Monitors.Monitor.Timing timings = 28;</code>
       */
      public Builder setTimings(
          int index, info.malenkov.aspiahwinfo.proto.Monitors.Monitor.Timing value) {
        if (timingsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTimingsIsMutable();
          timings_.set(index, value);
          onChanged();
        } else {
          timingsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .info.malenkov.aspiahwinfo.proto.Monitors.Monitor.Timing timings = 28;</code>
       */
      public Builder setTimings(
          int index, info.malenkov.aspiahwinfo.proto.Monitors.Monitor.Timing.Builder builderForValue) {
        if (timingsBuilder_ == null) {
          ensureTimingsIsMutable();
          timings_.set(index, builderForValue.build());
          onChanged();
        } else {
          timingsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .info.malenkov.aspiahwinfo.proto.Monitors.Monitor.Timing timings = 28;</code>
       */
      public Builder addTimings(info.malenkov.aspiahwinfo.proto.Monitors.Monitor.Timing value) {
        if (timingsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTimingsIsMutable();
          timings_.add(value);
          onChanged();
        } else {
          timingsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .info.malenkov.aspiahwinfo.proto.Monitors.Monitor.Timing timings = 28;</code>
       */
      public Builder addTimings(
          int index, info.malenkov.aspiahwinfo.proto.Monitors.Monitor.Timing value) {
        if (timingsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTimingsIsMutable();
          timings_.add(index, value);
          onChanged();
        } else {
          timingsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .info.malenkov.aspiahwinfo.proto.Monitors.Monitor.Timing timings = 28;</code>
       */
      public Builder addTimings(
          info.malenkov.aspiahwinfo.proto.Monitors.Monitor.Timing.Builder builderForValue) {
        if (timingsBuilder_ == null) {
          ensureTimingsIsMutable();
          timings_.add(builderForValue.build());
          onChanged();
        } else {
          timingsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .info.malenkov.aspiahwinfo.proto.Monitors.Monitor.Timing timings = 28;</code>
       */
      public Builder addTimings(
          int index, info.malenkov.aspiahwinfo.proto.Monitors.Monitor.Timing.Builder builderForValue) {
        if (timingsBuilder_ == null) {
          ensureTimingsIsMutable();
          timings_.add(index, builderForValue.build());
          onChanged();
        } else {
          timingsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .info.malenkov.aspiahwinfo.proto.Monitors.Monitor.Timing timings = 28;</code>
       */
      public Builder addAllTimings(
          java.lang.Iterable<? extends info.malenkov.aspiahwinfo.proto.Monitors.Monitor.Timing> values) {
        if (timingsBuilder_ == null) {
          ensureTimingsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, timings_);
          onChanged();
        } else {
          timingsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .info.malenkov.aspiahwinfo.proto.Monitors.Monitor.Timing timings = 28;</code>
       */
      public Builder clearTimings() {
        if (timingsBuilder_ == null) {
          timings_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          timingsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .info.malenkov.aspiahwinfo.proto.Monitors.Monitor.Timing timings = 28;</code>
       */
      public Builder removeTimings(int index) {
        if (timingsBuilder_ == null) {
          ensureTimingsIsMutable();
          timings_.remove(index);
          onChanged();
        } else {
          timingsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .info.malenkov.aspiahwinfo.proto.Monitors.Monitor.Timing timings = 28;</code>
       */
      public info.malenkov.aspiahwinfo.proto.Monitors.Monitor.Timing.Builder getTimingsBuilder(
          int index) {
        return getTimingsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .info.malenkov.aspiahwinfo.proto.Monitors.Monitor.Timing timings = 28;</code>
       */
      public info.malenkov.aspiahwinfo.proto.Monitors.Monitor.TimingOrBuilder getTimingsOrBuilder(
          int index) {
        if (timingsBuilder_ == null) {
          return timings_.get(index);  } else {
          return timingsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .info.malenkov.aspiahwinfo.proto.Monitors.Monitor.Timing timings = 28;</code>
       */
      public java.util.List<? extends info.malenkov.aspiahwinfo.proto.Monitors.Monitor.TimingOrBuilder> 
           getTimingsOrBuilderList() {
        if (timingsBuilder_ != null) {
          return timingsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(timings_);
        }
      }
      /**
       * <code>repeated .info.malenkov.aspiahwinfo.proto.Monitors.Monitor.Timing timings = 28;</code>
       */
      public info.malenkov.aspiahwinfo.proto.Monitors.Monitor.Timing.Builder addTimingsBuilder() {
        return getTimingsFieldBuilder().addBuilder(
            info.malenkov.aspiahwinfo.proto.Monitors.Monitor.Timing.getDefaultInstance());
      }
      /**
       * <code>repeated .info.malenkov.aspiahwinfo.proto.Monitors.Monitor.Timing timings = 28;</code>
       */
      public info.malenkov.aspiahwinfo.proto.Monitors.Monitor.Timing.Builder addTimingsBuilder(
          int index) {
        return getTimingsFieldBuilder().addBuilder(
            index, info.malenkov.aspiahwinfo.proto.Monitors.Monitor.Timing.getDefaultInstance());
      }
      /**
       * <code>repeated .info.malenkov.aspiahwinfo.proto.Monitors.Monitor.Timing timings = 28;</code>
       */
      public java.util.List<info.malenkov.aspiahwinfo.proto.Monitors.Monitor.Timing.Builder> 
           getTimingsBuilderList() {
        return getTimingsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          info.malenkov.aspiahwinfo.proto.Monitors.Monitor.Timing, info.malenkov.aspiahwinfo.proto.Monitors.Monitor.Timing.Builder, info.malenkov.aspiahwinfo.proto.Monitors.Monitor.TimingOrBuilder> 
          getTimingsFieldBuilder() {
        if (timingsBuilder_ == null) {
          timingsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              info.malenkov.aspiahwinfo.proto.Monitors.Monitor.Timing, info.malenkov.aspiahwinfo.proto.Monitors.Monitor.Timing.Builder, info.malenkov.aspiahwinfo.proto.Monitors.Monitor.TimingOrBuilder>(
                  timings_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          timings_ = null;
        }
        return timingsBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:info.malenkov.aspiahwinfo.proto.Monitors.Monitor)
    }

    // @@protoc_insertion_point(class_scope:info.malenkov.aspiahwinfo.proto.Monitors.Monitor)
    private static final info.malenkov.aspiahwinfo.proto.Monitors.Monitor DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new info.malenkov.aspiahwinfo.proto.Monitors.Monitor();
    }

    public static info.malenkov.aspiahwinfo.proto.Monitors.Monitor getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Monitor>
        PARSER = new com.google.protobuf.AbstractParser<Monitor>() {
      @java.lang.Override
      public Monitor parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Monitor(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Monitor> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Monitor> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public info.malenkov.aspiahwinfo.proto.Monitors.Monitor getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public static final int MONITOR_FIELD_NUMBER = 1;
  private java.util.List<info.malenkov.aspiahwinfo.proto.Monitors.Monitor> monitor_;
  /**
   * <code>repeated .info.malenkov.aspiahwinfo.proto.Monitors.Monitor monitor = 1;</code>
   */
  @java.lang.Override
  public java.util.List<info.malenkov.aspiahwinfo.proto.Monitors.Monitor> getMonitorList() {
    return monitor_;
  }
  /**
   * <code>repeated .info.malenkov.aspiahwinfo.proto.Monitors.Monitor monitor = 1;</code>
   */
  @java.lang.Override
  public java.util.List<? extends info.malenkov.aspiahwinfo.proto.Monitors.MonitorOrBuilder> 
      getMonitorOrBuilderList() {
    return monitor_;
  }
  /**
   * <code>repeated .info.malenkov.aspiahwinfo.proto.Monitors.Monitor monitor = 1;</code>
   */
  @java.lang.Override
  public int getMonitorCount() {
    return monitor_.size();
  }
  /**
   * <code>repeated .info.malenkov.aspiahwinfo.proto.Monitors.Monitor monitor = 1;</code>
   */
  @java.lang.Override
  public info.malenkov.aspiahwinfo.proto.Monitors.Monitor getMonitor(int index) {
    return monitor_.get(index);
  }
  /**
   * <code>repeated .info.malenkov.aspiahwinfo.proto.Monitors.Monitor monitor = 1;</code>
   */
  @java.lang.Override
  public info.malenkov.aspiahwinfo.proto.Monitors.MonitorOrBuilder getMonitorOrBuilder(
      int index) {
    return monitor_.get(index);
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    for (int i = 0; i < monitor_.size(); i++) {
      output.writeMessage(1, monitor_.get(i));
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    for (int i = 0; i < monitor_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, monitor_.get(i));
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof info.malenkov.aspiahwinfo.proto.Monitors)) {
      return super.equals(obj);
    }
    info.malenkov.aspiahwinfo.proto.Monitors other = (info.malenkov.aspiahwinfo.proto.Monitors) obj;

    if (!getMonitorList()
        .equals(other.getMonitorList())) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (getMonitorCount() > 0) {
      hash = (37 * hash) + MONITOR_FIELD_NUMBER;
      hash = (53 * hash) + getMonitorList().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static info.malenkov.aspiahwinfo.proto.Monitors parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static info.malenkov.aspiahwinfo.proto.Monitors parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static info.malenkov.aspiahwinfo.proto.Monitors parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static info.malenkov.aspiahwinfo.proto.Monitors parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static info.malenkov.aspiahwinfo.proto.Monitors parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static info.malenkov.aspiahwinfo.proto.Monitors parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static info.malenkov.aspiahwinfo.proto.Monitors parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static info.malenkov.aspiahwinfo.proto.Monitors parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static info.malenkov.aspiahwinfo.proto.Monitors parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static info.malenkov.aspiahwinfo.proto.Monitors parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static info.malenkov.aspiahwinfo.proto.Monitors parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static info.malenkov.aspiahwinfo.proto.Monitors parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(info.malenkov.aspiahwinfo.proto.Monitors prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code info.malenkov.aspiahwinfo.proto.Monitors}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:info.malenkov.aspiahwinfo.proto.Monitors)
      info.malenkov.aspiahwinfo.proto.MonitorsOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return info.malenkov.aspiahwinfo.proto.AspiaSystemInfo.internal_static_info_malenkov_aspiahwinfo_proto_Monitors_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return info.malenkov.aspiahwinfo.proto.AspiaSystemInfo.internal_static_info_malenkov_aspiahwinfo_proto_Monitors_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              info.malenkov.aspiahwinfo.proto.Monitors.class, info.malenkov.aspiahwinfo.proto.Monitors.Builder.class);
    }

    // Construct using info.malenkov.aspiahwinfo.proto.Monitors.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getMonitorFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      if (monitorBuilder_ == null) {
        monitor_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
      } else {
        monitorBuilder_.clear();
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return info.malenkov.aspiahwinfo.proto.AspiaSystemInfo.internal_static_info_malenkov_aspiahwinfo_proto_Monitors_descriptor;
    }

    @java.lang.Override
    public info.malenkov.aspiahwinfo.proto.Monitors getDefaultInstanceForType() {
      return info.malenkov.aspiahwinfo.proto.Monitors.getDefaultInstance();
    }

    @java.lang.Override
    public info.malenkov.aspiahwinfo.proto.Monitors build() {
      info.malenkov.aspiahwinfo.proto.Monitors result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public info.malenkov.aspiahwinfo.proto.Monitors buildPartial() {
      info.malenkov.aspiahwinfo.proto.Monitors result = new info.malenkov.aspiahwinfo.proto.Monitors(this);
      int from_bitField0_ = bitField0_;
      if (monitorBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0)) {
          monitor_ = java.util.Collections.unmodifiableList(monitor_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.monitor_ = monitor_;
      } else {
        result.monitor_ = monitorBuilder_.build();
      }
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof info.malenkov.aspiahwinfo.proto.Monitors) {
        return mergeFrom((info.malenkov.aspiahwinfo.proto.Monitors)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(info.malenkov.aspiahwinfo.proto.Monitors other) {
      if (other == info.malenkov.aspiahwinfo.proto.Monitors.getDefaultInstance()) return this;
      if (monitorBuilder_ == null) {
        if (!other.monitor_.isEmpty()) {
          if (monitor_.isEmpty()) {
            monitor_ = other.monitor_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureMonitorIsMutable();
            monitor_.addAll(other.monitor_);
          }
          onChanged();
        }
      } else {
        if (!other.monitor_.isEmpty()) {
          if (monitorBuilder_.isEmpty()) {
            monitorBuilder_.dispose();
            monitorBuilder_ = null;
            monitor_ = other.monitor_;
            bitField0_ = (bitField0_ & ~0x00000001);
            monitorBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getMonitorFieldBuilder() : null;
          } else {
            monitorBuilder_.addAllMessages(other.monitor_);
          }
        }
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      info.malenkov.aspiahwinfo.proto.Monitors parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (info.malenkov.aspiahwinfo.proto.Monitors) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private java.util.List<info.malenkov.aspiahwinfo.proto.Monitors.Monitor> monitor_ =
      java.util.Collections.emptyList();
    private void ensureMonitorIsMutable() {
      if (!((bitField0_ & 0x00000001) != 0)) {
        monitor_ = new java.util.ArrayList<info.malenkov.aspiahwinfo.proto.Monitors.Monitor>(monitor_);
        bitField0_ |= 0x00000001;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        info.malenkov.aspiahwinfo.proto.Monitors.Monitor, info.malenkov.aspiahwinfo.proto.Monitors.Monitor.Builder, info.malenkov.aspiahwinfo.proto.Monitors.MonitorOrBuilder> monitorBuilder_;

    /**
     * <code>repeated .info.malenkov.aspiahwinfo.proto.Monitors.Monitor monitor = 1;</code>
     */
    public java.util.List<info.malenkov.aspiahwinfo.proto.Monitors.Monitor> getMonitorList() {
      if (monitorBuilder_ == null) {
        return java.util.Collections.unmodifiableList(monitor_);
      } else {
        return monitorBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .info.malenkov.aspiahwinfo.proto.Monitors.Monitor monitor = 1;</code>
     */
    public int getMonitorCount() {
      if (monitorBuilder_ == null) {
        return monitor_.size();
      } else {
        return monitorBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .info.malenkov.aspiahwinfo.proto.Monitors.Monitor monitor = 1;</code>
     */
    public info.malenkov.aspiahwinfo.proto.Monitors.Monitor getMonitor(int index) {
      if (monitorBuilder_ == null) {
        return monitor_.get(index);
      } else {
        return monitorBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .info.malenkov.aspiahwinfo.proto.Monitors.Monitor monitor = 1;</code>
     */
    public Builder setMonitor(
        int index, info.malenkov.aspiahwinfo.proto.Monitors.Monitor value) {
      if (monitorBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureMonitorIsMutable();
        monitor_.set(index, value);
        onChanged();
      } else {
        monitorBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .info.malenkov.aspiahwinfo.proto.Monitors.Monitor monitor = 1;</code>
     */
    public Builder setMonitor(
        int index, info.malenkov.aspiahwinfo.proto.Monitors.Monitor.Builder builderForValue) {
      if (monitorBuilder_ == null) {
        ensureMonitorIsMutable();
        monitor_.set(index, builderForValue.build());
        onChanged();
      } else {
        monitorBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .info.malenkov.aspiahwinfo.proto.Monitors.Monitor monitor = 1;</code>
     */
    public Builder addMonitor(info.malenkov.aspiahwinfo.proto.Monitors.Monitor value) {
      if (monitorBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureMonitorIsMutable();
        monitor_.add(value);
        onChanged();
      } else {
        monitorBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .info.malenkov.aspiahwinfo.proto.Monitors.Monitor monitor = 1;</code>
     */
    public Builder addMonitor(
        int index, info.malenkov.aspiahwinfo.proto.Monitors.Monitor value) {
      if (monitorBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureMonitorIsMutable();
        monitor_.add(index, value);
        onChanged();
      } else {
        monitorBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .info.malenkov.aspiahwinfo.proto.Monitors.Monitor monitor = 1;</code>
     */
    public Builder addMonitor(
        info.malenkov.aspiahwinfo.proto.Monitors.Monitor.Builder builderForValue) {
      if (monitorBuilder_ == null) {
        ensureMonitorIsMutable();
        monitor_.add(builderForValue.build());
        onChanged();
      } else {
        monitorBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .info.malenkov.aspiahwinfo.proto.Monitors.Monitor monitor = 1;</code>
     */
    public Builder addMonitor(
        int index, info.malenkov.aspiahwinfo.proto.Monitors.Monitor.Builder builderForValue) {
      if (monitorBuilder_ == null) {
        ensureMonitorIsMutable();
        monitor_.add(index, builderForValue.build());
        onChanged();
      } else {
        monitorBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .info.malenkov.aspiahwinfo.proto.Monitors.Monitor monitor = 1;</code>
     */
    public Builder addAllMonitor(
        java.lang.Iterable<? extends info.malenkov.aspiahwinfo.proto.Monitors.Monitor> values) {
      if (monitorBuilder_ == null) {
        ensureMonitorIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, monitor_);
        onChanged();
      } else {
        monitorBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .info.malenkov.aspiahwinfo.proto.Monitors.Monitor monitor = 1;</code>
     */
    public Builder clearMonitor() {
      if (monitorBuilder_ == null) {
        monitor_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
      } else {
        monitorBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .info.malenkov.aspiahwinfo.proto.Monitors.Monitor monitor = 1;</code>
     */
    public Builder removeMonitor(int index) {
      if (monitorBuilder_ == null) {
        ensureMonitorIsMutable();
        monitor_.remove(index);
        onChanged();
      } else {
        monitorBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .info.malenkov.aspiahwinfo.proto.Monitors.Monitor monitor = 1;</code>
     */
    public info.malenkov.aspiahwinfo.proto.Monitors.Monitor.Builder getMonitorBuilder(
        int index) {
      return getMonitorFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .info.malenkov.aspiahwinfo.proto.Monitors.Monitor monitor = 1;</code>
     */
    public info.malenkov.aspiahwinfo.proto.Monitors.MonitorOrBuilder getMonitorOrBuilder(
        int index) {
      if (monitorBuilder_ == null) {
        return monitor_.get(index);  } else {
        return monitorBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .info.malenkov.aspiahwinfo.proto.Monitors.Monitor monitor = 1;</code>
     */
    public java.util.List<? extends info.malenkov.aspiahwinfo.proto.Monitors.MonitorOrBuilder> 
         getMonitorOrBuilderList() {
      if (monitorBuilder_ != null) {
        return monitorBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(monitor_);
      }
    }
    /**
     * <code>repeated .info.malenkov.aspiahwinfo.proto.Monitors.Monitor monitor = 1;</code>
     */
    public info.malenkov.aspiahwinfo.proto.Monitors.Monitor.Builder addMonitorBuilder() {
      return getMonitorFieldBuilder().addBuilder(
          info.malenkov.aspiahwinfo.proto.Monitors.Monitor.getDefaultInstance());
    }
    /**
     * <code>repeated .info.malenkov.aspiahwinfo.proto.Monitors.Monitor monitor = 1;</code>
     */
    public info.malenkov.aspiahwinfo.proto.Monitors.Monitor.Builder addMonitorBuilder(
        int index) {
      return getMonitorFieldBuilder().addBuilder(
          index, info.malenkov.aspiahwinfo.proto.Monitors.Monitor.getDefaultInstance());
    }
    /**
     * <code>repeated .info.malenkov.aspiahwinfo.proto.Monitors.Monitor monitor = 1;</code>
     */
    public java.util.List<info.malenkov.aspiahwinfo.proto.Monitors.Monitor.Builder> 
         getMonitorBuilderList() {
      return getMonitorFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        info.malenkov.aspiahwinfo.proto.Monitors.Monitor, info.malenkov.aspiahwinfo.proto.Monitors.Monitor.Builder, info.malenkov.aspiahwinfo.proto.Monitors.MonitorOrBuilder> 
        getMonitorFieldBuilder() {
      if (monitorBuilder_ == null) {
        monitorBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            info.malenkov.aspiahwinfo.proto.Monitors.Monitor, info.malenkov.aspiahwinfo.proto.Monitors.Monitor.Builder, info.malenkov.aspiahwinfo.proto.Monitors.MonitorOrBuilder>(
                monitor_,
                ((bitField0_ & 0x00000001) != 0),
                getParentForChildren(),
                isClean());
        monitor_ = null;
      }
      return monitorBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:info.malenkov.aspiahwinfo.proto.Monitors)
  }

  // @@protoc_insertion_point(class_scope:info.malenkov.aspiahwinfo.proto.Monitors)
  private static final info.malenkov.aspiahwinfo.proto.Monitors DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new info.malenkov.aspiahwinfo.proto.Monitors();
  }

  public static info.malenkov.aspiahwinfo.proto.Monitors getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<Monitors>
      PARSER = new com.google.protobuf.AbstractParser<Monitors>() {
    @java.lang.Override
    public Monitors parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new Monitors(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<Monitors> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<Monitors> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public info.malenkov.aspiahwinfo.proto.Monitors getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

